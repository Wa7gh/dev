{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Employeer_dash/jobs/AddJob.jsx\";\nimport React, { Component } from 'react';\nimport { localhost } from \"../../GlobalVars\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\nimport jwt_decode from 'jwt-decode';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { Form, Nav } from \"react-bootstrap\";\n\nconst validate = values => {\n  console.log(\"i'm hereee\");\n  const errors = {};\n\n  if (!values.title) {\n    errors.email = 'Required';\n  }\n\n  if (!values.description) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst AddJobForm = () => {\n  const checkboxclick = e => {\n    console.log(\"checked\");\n    console.log(e.target.id);\n    let temp = formik.values.technologies.slice();\n    let fIndex = temp.indexOf(e.target.id);\n\n    if (fIndex < 0) {\n      temp.push(e.target.id);\n    } else {\n      temp.splice(fIndex, 1);\n    }\n\n    formik.values.technologies = temp;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      budget: '',\n      technologies: [],\n      deadline: '',\n      requests: [] // emp_id: jwt_decode(localStorage.usertoken).user._id\n\n    },\n    validate,\n    onSubmit: async values => {\n      axios.post(`${localhost}/job/create`, values).then(result => {\n        console.log(\"create job\");\n        console.log(result);\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(\"div\", {\n    style: {\n      background: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Title\",\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), formik.touched.title && formik.errors.title ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, formik.errors.title, \" \") : null, React.createElement(MDBInput, {\n    label: \"Description\",\n    id: \"description\",\n    name: \"description\",\n    type: \"textarea\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), formik.touched.description && formik.errors.description ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, formik.errors.description, \" \") : null, React.createElement(MDBInput, {\n    label: \"Budget\",\n    id: \"budget\",\n    name: \"budget\",\n    type: \"number\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.budget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), formik.touched.budget && formik.errors.budget ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, formik.errors.budget) : null, React.createElement(MDBInput, {\n    label: \"technologies\",\n    id: \"technologies\",\n    name: \"technologies\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.technologies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), formik.touched.technologies && formik.errors.technologies ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, formik.errors.technologies) : null, React.createElement(MDBInput, {\n    label: \"deadline\",\n    id: \"deadline\",\n    name: \"deadline\",\n    type: \"Date\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.deadline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), formik.touched.deadline && formik.errors.deadline ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, formik.errors.deadline, \" \") : null, React.createElement(Form.Check, {\n    label: \"Ruby\",\n    type: \"checkbox\",\n    id: \"Ruby\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    label: \"javascript\",\n    type: \"checkbox\",\n    id: \"javascript\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    label: \"python\",\n    type: \"checkbox\",\n    id: \"python\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Add\"))))));\n};\n\nexport default AddJobForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Employeer_dash/jobs/AddJob.jsx"],"names":["React","Component","localhost","useFormik","axios","jwt_decode","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","Form","Nav","validate","values","console","log","errors","title","email","description","password","AddJobForm","checkboxclick","e","target","id","temp","formik","technologies","slice","fIndex","indexOf","push","splice","initialValues","budget","deadline","requests","onSubmit","post","then","result","catch","err","background","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {localhost} from \"../../GlobalVars\"\nimport {useFormik} from \"formik\"\nimport axios from \"axios\"\nimport jwt_decode from 'jwt-decode'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { Form, Nav } from \"react-bootstrap\";\n\nconst validate = values => {\n  console.log(\"i'm hereee\")\n    const errors = {};\n    if (!values.title) {\n      errors.email = 'Required';\n    }\n    if (!values.description) {\n      errors.password = \"Required\"\n    }\n    return errors;\n  };\nconst AddJobForm = () => {\n  const checkboxclick = (e) =>{\n    console.log(\"checked\")\n    console.log(e.target.id)\n      let temp = formik.values.technologies.slice()\n      let fIndex = temp.indexOf(e.target.id)\n      if (fIndex < 0) {\n          temp.push(e.target.id)\n      } else {\n           temp.splice(fIndex, 1)\n      }\n      formik.values.technologies = temp\n  } \n    const formik = useFormik({\n        initialValues: {\n          title: '',\n          description:'',\n          budget:'',\n          technologies:[],\n          deadline:'',\n          requests:[],\n          // emp_id: jwt_decode(localStorage.usertoken).user._id\n        },\n        validate,\n        onSubmit: async (values) => {\n          axios.post(`${localhost}/job/create`,values)\n          .then(result=>{console.log(\"create job\")\n            console.log(result)})\n          .catch(err=>console.log(err))\n        },\n      });\n      return (\n        <div style={{background:\"pink\"}}>\n       <br/>\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"6\">\n              <form onSubmit = {formik.handleSubmit}>  \n                <MDBInput\n                  label=\"Title\"\n                  id=\"title\"\n                  name=\"title\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.title}\n                />\n                {formik.touched.title && formik.errors.title ? (\n                  <div>{formik.errors.title} </div> ) : null}\n                <MDBInput\n                  label=\"Description\"\n                  id=\"description\"\n                  name=\"description\"\n                  type=\"textarea\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.description} />\n                {formik.touched.description && formik.errors.description ? (\n                  <div>{formik.errors.description} </div>\n                ): null}\n                <MDBInput\n                  label=\"Budget\"\n                  id=\"budget\"\n                  name=\"budget\"\n                  type=\"number\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.budget}\n                />\n                {formik.touched.budget && formik.errors.budget ? (\n                  <div>{formik.errors.budget}</div>\n                ) : null}\n                <MDBInput\n                  label=\"technologies\"\n                  id=\"technologies\"\n                  name=\"technologies\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.technologies} />\n                {formik.touched.technologies && formik.errors.technologies ? (\n                  <div>{formik.errors.technologies}</div>\n                ) : null}\n                 <MDBInput\n                  label=\"deadline\"\n                  id=\"deadline\"\n                  name=\"deadline\"\n                  type=\"Date\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.deadline} />\n                {formik.touched.deadline && formik.errors.deadline ? (\n                  <div>{formik.errors.deadline} </div>\n                ): null}\n                <Form.Check label=\"Ruby\" type=\"checkbox\" id=\"Ruby\"  onChange = {checkboxclick}/>\n                <input label=\"javascript\" type=\"checkbox\" id=\"javascript\" onChange = {checkboxclick}/>\n                <input label=\"python\" type=\"checkbox\" id=\"python\" onChange = {checkboxclick}/>\n                <br/>\n                <MDBBtn type=\"submit\" color=\"primary\">Add</MDBBtn>\n              </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n        </div>\n      );\n    };\n\nexport default AddJobForm;\n"]},"metadata":{},"sourceType":"module"}