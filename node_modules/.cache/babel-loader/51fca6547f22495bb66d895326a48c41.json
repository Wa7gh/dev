{"ast":null,"code":"// import React from 'react';\n// import { useFormik } from 'formik';\n// import { Col, Row, Form, Container, Button } from 'react-bootstrap';\n// //import { register } from './functionAuth'\n// import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n// import './Atho.css'\n// const validate = values => {\n//   const errors = {};\n//   if (!values.firstName) {\n//     errors.firstName = 'Required';\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less';\n//   }\n//   if (!values.lastName) {\n//     errors.lastName = 'Required';\n//   } else if (values.lastName.length > 20) {\n//     errors.lastName = 'Must be 20 characters or less';\n//   }\n//   if (!values.email) {\n//     errors.email = 'Required';\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address';\n//   }\n//   if (!values.password) {\n//     errors.password = \"Required\"\n//   }\n//   if (!values.cpassword) {\n//     errors.cpassword = \"Required\"\n//   } else {\n//     if (values.cpassword !== values.password) {\n//       errors.cpassword = \"password doesn't match\"\n//     }\n//   }\n//   if (!values.username) {\n//     errors.username = \"Required\"\n//   }\n//   return errors;\n// };\n// const addPortfolio = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       firstName: '',\n//       lastName: '',\n//       email: '',\n//       password: '',\n//       cpassword: '',\n//       username: '',\n//       role:2\n//     },\n//     validate,\n//     onSubmit: async (values) => {\n//       register(values)\n//         .then(res => {\n//           if(res.data==\"1\"){\n//             alert(\"Email is already in use\")\n//           }else if(res.data==\"0\"){\n//             alert(\"username is already in use\")\n//           }else if(res.data==\"3\"){\n//             alert(\"User registered!\")\n//           }\n//         }\n//         )\n//         .catch(err => console.log(err))\n//     },\n//   });\n//   return (\n//     <MDBContainer>\n//       <p>Developer</p>\n//       <MDBRow>\n//         <MDBCol md=\"6\">\n//           <form onSubmit={formik.handleSubmit}>\n//             <MDBInput\n//               label=\"First name\"\n//               id=\"firstName\"\n//               name=\"firstName\"\n//               type=\"text\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.firstName}\n//             />\n//             {formik.touched.firstName && formik.errors.firstName ? (\n//               <div>{formik.errors.firstName}</div>\n//             ) : null}\n//             <MDBInput\n//               label=\"Last name\"\n//               id=\"lastName\"\n//               name=\"lastName\"\n//               type=\"text\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.lastName}\n//             />\n//             {formik.touched.lastName && formik.errors.lastName ? (\n//               <div>{formik.errors.lastName}</div>\n//             ) : null}\n//             <MDBInput\n//               label=\"Username\"\n//               id=\"username\"\n//               name=\"username\"\n//               type=\"text\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.username}\n//             />\n//             {formik.touched.username && formik.errors.username ? (\n//               <div>{formik.errors.username}</div>\n//             ) : null}\n//             <MDBInput\n//               label=\"Email\"\n//               id=\"email\"\n//               name=\"email\"\n//               type=\"email\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.email}\n//             />\n//             {formik.touched.email && formik.errors.email ? (\n//               <div>{formik.errors.email}</div>\n//             ) : null}\n//             <MDBInput\n//               label=\"Password\"\n//               id=\"password\"\n//               name=\"password\"\n//               type=\"password\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.password}\n//             />\n//             {formik.touched.password && formik.errors.password ? (\n//               <div>{formik.errors.password}</div>\n//             ) : null}\n//             <MDBInput\n//               label=\"Confirm password\"\n//               id=\"cpassword\"\n//               name=\"cpassword\"\n//               type=\"password\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.cpassword}\n//             />\n//             {formik.touched.cpassword && formik.errors.cpassword ? (\n//               <div>{formik.errors.cpassword}</div>\n//             ) : null}\n//             <MDBBtn type=\"submit\" color=\"primary\">Register</MDBBtn>\n//           </form>\n//         </MDBCol>\n//       </MDBRow>\n//     </MDBContainer>\n//   );\n// };\n// export default addPortfolio;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/portfolio/AddPortfolio.jsx"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import { useFormik } from 'formik';\n// import { Col, Row, Form, Container, Button } from 'react-bootstrap';\n// //import { register } from './functionAuth'\n// import { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n// import './Atho.css'\n\n// const validate = values => {\n//   const errors = {};\n//   if (!values.firstName) {\n//     errors.firstName = 'Required';\n//   } else if (values.firstName.length > 15) {\n//     errors.firstName = 'Must be 15 characters or less';\n//   }\n\n//   if (!values.lastName) {\n//     errors.lastName = 'Required';\n//   } else if (values.lastName.length > 20) {\n//     errors.lastName = 'Must be 20 characters or less';\n//   }\n\n//   if (!values.email) {\n//     errors.email = 'Required';\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address';\n//   }\n\n//   if (!values.password) {\n//     errors.password = \"Required\"\n//   }\n\n//   if (!values.cpassword) {\n//     errors.cpassword = \"Required\"\n//   } else {\n//     if (values.cpassword !== values.password) {\n//       errors.cpassword = \"password doesn't match\"\n//     }\n//   }\n\n//   if (!values.username) {\n//     errors.username = \"Required\"\n//   }\n\n//   return errors;\n// };\n\n// const addPortfolio = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       firstName: '',\n//       lastName: '',\n//       email: '',\n//       password: '',\n//       cpassword: '',\n//       username: '',\n//       role:2\n//     },\n//     validate,\n//     onSubmit: async (values) => {\n//       register(values)\n//         .then(res => {\n//           if(res.data==\"1\"){\n//             alert(\"Email is already in use\")\n//           }else if(res.data==\"0\"){\n//             alert(\"username is already in use\")\n//           }else if(res.data==\"3\"){\n//             alert(\"User registered!\")\n//           }\n//         }\n//         )\n//         .catch(err => console.log(err))\n//     },\n//   });\n//   return (\n//     <MDBContainer>\n\n//       <p>Developer</p>\n//       <MDBRow>\n//         <MDBCol md=\"6\">\n//           <form onSubmit={formik.handleSubmit}>\n//             <MDBInput\n//               label=\"First name\"\n//               id=\"firstName\"\n//               name=\"firstName\"\n//               type=\"text\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.firstName}\n//             />\n//             {formik.touched.firstName && formik.errors.firstName ? (\n//               <div>{formik.errors.firstName}</div>\n//             ) : null}\n\n//             <MDBInput\n//               label=\"Last name\"\n//               id=\"lastName\"\n//               name=\"lastName\"\n//               type=\"text\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.lastName}\n//             />\n//             {formik.touched.lastName && formik.errors.lastName ? (\n//               <div>{formik.errors.lastName}</div>\n//             ) : null}\n\n//             <MDBInput\n//               label=\"Username\"\n//               id=\"username\"\n//               name=\"username\"\n//               type=\"text\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.username}\n//             />\n//             {formik.touched.username && formik.errors.username ? (\n//               <div>{formik.errors.username}</div>\n//             ) : null}\n\n//             <MDBInput\n//               label=\"Email\"\n//               id=\"email\"\n//               name=\"email\"\n//               type=\"email\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.email}\n//             />\n//             {formik.touched.email && formik.errors.email ? (\n//               <div>{formik.errors.email}</div>\n//             ) : null}\n//             <MDBInput\n//               label=\"Password\"\n//               id=\"password\"\n//               name=\"password\"\n//               type=\"password\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.password}\n//             />\n//             {formik.touched.password && formik.errors.password ? (\n//               <div>{formik.errors.password}</div>\n//             ) : null}\n\n//             <MDBInput\n//               label=\"Confirm password\"\n//               id=\"cpassword\"\n//               name=\"cpassword\"\n//               type=\"password\"\n//               onChange={formik.handleChange}\n//               onBlur={formik.handleBlur}\n//               value={formik.values.cpassword}\n//             />\n//             {formik.touched.cpassword && formik.errors.cpassword ? (\n//               <div>{formik.errors.cpassword}</div>\n//             ) : null}\n\n//             <MDBBtn type=\"submit\" color=\"primary\">Register</MDBBtn>\n//           </form>\n//         </MDBCol>\n//       </MDBRow>\n//     </MDBContainer>\n//   );\n// };\n\n// export default addPortfolio;\n\n"]},"metadata":{},"sourceType":"module"}