{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/jobs/JobNav.jsx\";\nimport React, { Component } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { localhost } from \"../../GlobalVars\";\nimport jwt_decode from 'jwt-decode';\nimport JobsCards from './JobsCards';\nexport default class JobNav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showT: \"\",\n      jobs: null,\n      tab1: false,\n      tab2: false\n    };\n\n    this.showStuff = e => {\n      var tab1 = false;\n      var tab2 = false;\n\n      if (e.target.name == \"Prequests\") {\n        tab1 = true;\n      }\n\n      if (e.target.name == \"Assigned\") {\n        tab2 = true;\n      }\n\n      this.setState({\n        showT: e.target.name,\n        tab1: tab1,\n        tab2: tab2\n      });\n    };\n\n    this.componentDidMount = () => {\n      axios.get(`${localhost}/job`).then(items => {\n        var temp = [];\n        var assignedJobs = [];\n        items.data.map(t => {\n          console.log(jwt_decode(localStorage.usertoken).user._id);\n\n          if (t.requests.includes(jwt_decode(localStorage.usertoken).user._id)) {\n            temp.push(t);\n          }\n\n          if (t.dev_id == jwt_decode(localStorage.usertoken).user._id) {\n            assignedJobs.push(t);\n          }\n        });\n        this.setState({\n          jobs: temp,\n          assignedJobs: assignedJobs\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      fill: true,\n      variant: \"tabs\",\n      defaultActiveKey: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      onClick: this.showStuff,\n      name: \"Prequests\",\n      disabled: this.state.tab1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Pending requests \")), React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      name: \"Assigned\",\n      disabled: this.state.tab2,\n      onClick: this.showStuff,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Assigned\"))), this.state.showT == \"Prequests\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.jobs.map(job => {\n      return React.createElement(JobsCards, {\n        data: job,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    })), this.state.showT == \"Assigned\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.assignedJobs.map(job => {\n      return React.createElement(JobsCards, {\n        data: job,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/jobs/JobNav.jsx"],"names":["React","Component","Nav","axios","localhost","jwt_decode","JobsCards","JobNav","state","showT","jobs","tab1","tab2","showStuff","e","target","name","setState","componentDidMount","get","then","items","temp","assignedJobs","data","map","t","console","log","localStorage","usertoken","user","_id","requests","includes","push","dev_id","catch","err","render","job"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Nav} from \"react-bootstrap\"\nimport axios from \"axios\"\nimport {localhost} from \"../../GlobalVars\"\nimport jwt_decode from 'jwt-decode'\nimport JobsCards from './JobsCards'\n\nexport default class JobNav extends Component {\n\n  state = {\n    showT:\"\",\n    jobs:null,\n    tab1:false,\n    tab2:false\n  }\n\n  showStuff = (e) =>{\n    var tab1 =false\n    var tab2 = false\n\n    if(e.target.name==\"Prequests\"){\n      tab1=true\n    }\n    if(e.target.name==\"Assigned\"){\n      tab2=true\n    }\n    this.setState({\n      showT:e.target.name,\n      tab1:tab1,\n      tab2:tab2\n    })\n  }\n\n  componentDidMount = () =>{\n\n    axios.get(`${localhost}/job`)\n    .then(items=>{\n      var temp = []\n      var assignedJobs = []\n      items.data.map(t=>{\n        console.log(jwt_decode(localStorage.usertoken).user._id)\n        if(t.requests.includes(jwt_decode(localStorage.usertoken).user._id)){\n          temp.push(t)\n        }\n\n        if(t.dev_id==jwt_decode(localStorage.usertoken).user._id){\n          assignedJobs.push(t)\n        }\n      })\n      this.setState({jobs:temp,assignedJobs:assignedJobs})\n    })\n    .catch(err=>console.log(err))\n  }\n  \n  render() {\n\n    return (\n      <div>\n        <Nav fill variant=\"tabs\" defaultActiveKey=\"/home\">\n          <Nav.Item>\n            <Nav.Link\n            onClick={this.showStuff}\n            name=\"Prequests\"\n            disabled={this.state.tab1}\n            >Pending requests </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link \n            name=\"Assigned\"\n            disabled={this.state.tab2}\n            onClick={this.showStuff}\n            >Assigned</Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n      {this.state.showT == \"Prequests\" && \n      <div>\n        {this.state.jobs.map(job=>{\n          return <JobsCards data={job} />\n        })}\n\n        </div>}\n      {this.state.showT ==\"Assigned\" && \n      <div>\n        {this.state.assignedJobs.map(job=>{\n          return <JobsCards data={job} />\n        })}\n      </div>\n      }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}