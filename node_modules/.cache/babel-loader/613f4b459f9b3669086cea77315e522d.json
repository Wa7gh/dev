{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/Editprofile.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Alert, Nav, Navbar } from 'react-bootstrap';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useFormik } from 'formik';\nimport { localhost } from '../GlobalVars';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstname) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.lastname) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  return errors;\n};\n\nconst EditForm = () => {\n  console.log(jwt_decode(localStorage.usertoken));\n  const formik = useFormik({\n    initialValues: {\n      firstname: jwt_decode(localStorage.usertoken).user.firstname,\n      lastname: jwt_decode(localStorage.usertoken).user.lastname,\n      link: jwt_decode(localStorage.usertoken).user.link,\n      username: jwt_decode(localStorage.usertoken).user.username,\n      user: jwt_decode(localStorage.usertoken).user\n    },\n    validate,\n    onSubmit: async values => {\n      console.log(\"In submit Handler\"); // axios.put(`${localhost}/user/changedetails/${values.user._id}`, values)\n      //     .then(res => {\n      //         console.log(res.data.msg)\n      //         if (res.data.msg == \"1\") {\n      //             alert(\"Username is in use\")\n      //         } else if (res.data.msg == \"2\") {\n      //             alert(\"update successfully\")\n      //             localStorage.removeItem('usertoken')\n      //             axios.post(`${localhost}/user/edit/token`, res.data.user)\n      //                 .then(res2 => {\n      //                     localStorage.setItem('usertoken', res2.data)\n      //                     // setTimeout(() => {\n      //                     //     this.props.history.push('/profile')\n      //                     // }, 500)\n      //                 })\n      //         } else {\n      //             alert(\"error\")\n      //         }\n      //     })\n      //     .catch(err=>console.log(err))\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstname\",\n    name: \"firstname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastname\",\n    name: \"lastname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n    label: \"Username\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(MDBInput, {\n    label: \"Link\",\n    id: \"link\",\n    name: \"link\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(MDBBtn, {\n    color: \"primary\",\n    href: \"/changepassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Change password\"), React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Submit\"))))));\n};\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/Editprofile.jsx"],"names":["React","Component","Form","Button","Alert","Nav","Navbar","jwt_decode","axios","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","useFormik","localhost","validate","values","errors","firstname","password","lastname","username","EditForm","console","log","localStorage","usertoken","formik","initialValues","user","link","onSubmit","handleChange","handleBlur","touched","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Alert, Nav , Navbar} from 'react-bootstrap'\nimport jwt_decode from 'jwt-decode'\nimport axios from 'axios'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useFormik } from 'formik';\nimport { localhost } from '../GlobalVars'\n\nconst validate = values => {\n    const errors = {};\n    if (!values.firstname) {\n        errors.password = \"Required\"\n    }\n\n    if (!values.lastname) {\n        errors.password = \"Required\"\n    }\n\n    if (!values.username) {\n        errors.username = \"Required\"\n    }\n    return errors;\n};\n\nconst EditForm = () => {\n    console.log(jwt_decode(localStorage.usertoken))\n    const formik = useFormik({\n        initialValues: {\n            firstname: jwt_decode(localStorage.usertoken).user.firstname,\n            lastname:jwt_decode(localStorage.usertoken).user.lastname,\n            link: jwt_decode(localStorage.usertoken).user.link,\n            username:jwt_decode(localStorage.usertoken).user.username,\n            user:jwt_decode(localStorage.usertoken).user\n        },\n        validate,\n        onSubmit: async (values) => {\n            console.log(\"In submit Handler\")\n\n            // axios.put(`${localhost}/user/changedetails/${values.user._id}`, values)\n            //     .then(res => {\n            //         console.log(res.data.msg)\n            //         if (res.data.msg == \"1\") {\n            //             alert(\"Username is in use\")\n            //         } else if (res.data.msg == \"2\") {\n            //             alert(\"update successfully\")\n            //             localStorage.removeItem('usertoken')\n            //             axios.post(`${localhost}/user/edit/token`, res.data.user)\n            //                 .then(res2 => {\n            //                     localStorage.setItem('usertoken', res2.data)\n            //                     // setTimeout(() => {\n            //                     //     this.props.history.push('/profile')\n            //                     // }, 500)\n            //                 })\n            //         } else {\n            //             alert(\"error\")\n            //         }\n            //     })\n            //     .catch(err=>console.log(err))\n        },\n    });\n    return (\n        <div>\n            <MDBContainer>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <form>\n                        <MDBInput\n                            label=\"First name\"\n                            id=\"firstname\"\n                            name=\"firstname\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.firstname}\n                        />\n                        {formik.touched.firstname && formik.errors.firstname ? (\n                            <div>{formik.errors.firstname}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Last name\"\n                            id=\"lastname\"\n                            name=\"lastname\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.lastname}\n                        />\n                        {formik.touched.lastname && formik.errors.lastname ? (\n                            <div>{formik.errors.lastname}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Username\"\n                            id=\"username\"\n                            name=\"username\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.username}\n                        />\n                        {formik.touched.username && formik.errors.username ? (\n                            <div>{formik.errors.username}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Link\"\n                            id=\"link\"\n                            name=\"link\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.link}\n                        />\n                        <MDBBtn color=\"primary\" href = \"/changepassword\" >Change password</MDBBtn>\n                        <MDBBtn type=\"submit\" color=\"primary\" onClick={formik.handleSubmit}>Submit</MDBBtn>\n                    </form>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n        </div>\n    );\n};\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}