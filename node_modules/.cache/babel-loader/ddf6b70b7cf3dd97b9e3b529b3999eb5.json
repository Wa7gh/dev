{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Login.jsx\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Col, Row, Form, Container, Button } from 'react-bootstrap';\nimport { login } from './functionAuth';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport \"./Atho.css\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: async values => {\n      login(values).then(res => {\n        if (res.data == \"1\") {\n          alert(\"password is incorrect\");\n        } else if (res.data == \"2\") {\n          alert(\"email not found\");\n        } else {\n          localStorage.setItem('usertoken', res.data);\n          alert(\"login successfully\");\n          console.log(jwt_decode(localStorage.usertoken).user.username);\n          setUsername(jwt_decode(localStorage.usertoken).user.username);\n          setShow(!show);\n        }\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, show && React.createElement(Redirect, {\n    to: {\n      pathname: `/Portfolio/${username}`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Login\"))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Login.jsx"],"names":["React","useState","useFormik","Col","Row","Form","Container","Button","login","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","Redirect","jwt_decode","validate","values","errors","email","test","password","LoginForm","show","setShow","username","setUsername","formik","initialValues","onSubmit","then","res","data","alert","localStorage","setItem","console","log","usertoken","user","catch","err","pathname","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["\nimport React ,{ useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Col, Row, Form, Container, Button } from 'react-bootstrap';\nimport { login } from './functionAuth'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { Redirect } from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nimport \"./Atho.css\"\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const [show, setShow] = useState(false);\n  const [username,setUsername] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: async (values) => {\n      login(values)\n      .then(res =>{\n        if(res.data==\"1\"){\n          alert(\"password is incorrect\")\n        }else if(res.data==\"2\"){\n          alert(\"email not found\")\n        }else{\n          localStorage.setItem('usertoken' , res.data)\n          alert(\"login successfully\")\n          console.log(jwt_decode(localStorage.usertoken).user.username)\n          setUsername(jwt_decode(localStorage.usertoken).user.username)\n          \n          setShow(!show)\n        } \n        })\n      .catch(err=>console.log(err))\n    },\n  });\n  return (\n    <div>\n    <MDBContainer className=\"register\" >\n      {show && <Redirect to={{ pathname: `/Portfolio/${username}` }} />}\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>  \n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n            <MDBBtn type=\"submit\" color=\"primary\">Login</MDBBtn>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}