{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/project/AddProject.jsx\";\nimport React from \"react\";\nimport \"./project.css\";\nimport { useFormik } from \"formik\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport { fileUploadHandler, getImagesUrl } from \"../../ImageUpload/UploadImage\";\nimport Axios from \"axios\";\nimport { localhost } from \"../../GlobalVars\";\nimport jwt_decode from \"jwt-decode\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.email = \"Required\";\n  }\n\n  if (!values.description) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst AddProjectForm = () => {\n  const buttonClick = event => {\n    if (event.target.files[0]) {\n      const image = event.target.files[0];\n      formik.values.image = image;\n    }\n  };\n\n  const uploadTheImage = () => {\n    fileUploadHandler(formik.values.image);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      image: \"\",\n      github: \"\",\n      link: \"\",\n      user: jwt_decode(localStorage.usertoken).user._id\n    },\n    validate,\n    onSubmit: async values => {\n      getImagesUrl(values.image.name).then(url => {\n        values.image = url;\n        Axios.post(`${localhost}/project/create`, values).then(result => {\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"success\",\n            title: \"successfully added project\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }).catch(err => console.log(err));\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"AddProject\",\n    id: \"myform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Title\",\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), formik.touched.title && formik.errors.title ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, formik.errors.title, \" \") : null, React.createElement(MDBInput, {\n    label: \"Description\",\n    id: \"description\",\n    name: \"description\",\n    type: \"textarea\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), formik.touched.description && formik.errors.description ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, formik.errors.description, \" \") : null, React.createElement(MDBInput, {\n    label: \"Github\",\n    id: \"github\",\n    name: \"github\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.github,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), formik.touched.github && formik.errors.github ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, formik.errors.github) : null, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    id: \"\",\n    onChange: buttonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), formik.touched.image && formik.errors.image ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, formik.errors.image) : null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    onClick: uploadTheImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Upload image\", \" \"), React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Add\"))))));\n};\n\nexport default AddProjectForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/project/AddProject.jsx"],"names":["React","useFormik","Swal","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","fileUploadHandler","getImagesUrl","Axios","localhost","jwt_decode","validate","values","errors","title","email","description","password","AddProjectForm","buttonClick","event","target","files","image","formik","uploadTheImage","initialValues","github","link","user","localStorage","usertoken","_id","onSubmit","name","then","url","post","result","fire","position","icon","showConfirmButton","timer","catch","err","console","log","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./project.css\";\nimport { useFormik } from \"formik\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\n\nimport { fileUploadHandler, getImagesUrl } from \"../../ImageUpload/UploadImage\";\n\nimport Axios from \"axios\";\nimport { localhost } from \"../../GlobalVars\";\nimport jwt_decode from \"jwt-decode\";\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) {\n    errors.email = \"Required\";\n  }\n  if (!values.description) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\nconst AddProjectForm = () => {\n  const buttonClick = event => {\n    if (event.target.files[0]) {\n      const image = event.target.files[0];\n      formik.values.image = image;\n    }\n  };\n  const uploadTheImage = () => {\n    fileUploadHandler(formik.values.image);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      image: \"\",\n      github: \"\",\n      link: \"\",\n      user: jwt_decode(localStorage.usertoken).user._id\n    },\n    validate,\n    onSubmit: async values => {\n      getImagesUrl(values.image.name).then(url => {\n        values.image = url;\n\n        Axios.post(`${localhost}/project/create`, values)\n          .then(result => {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"successfully added project\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          })\n          .catch(err => console.log(err));\n      });\n    }\n  });\n  return (\n    <div className=\"AddProject\" id=\"myform\">\n      <br />\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={formik.handleSubmit}>\n              <MDBInput\n                label=\"Title\"\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.title}\n              />\n              {formik.touched.title && formik.errors.title ? (\n                <div>{formik.errors.title} </div>\n              ) : null}\n              <MDBInput\n                label=\"Description\"\n                id=\"description\"\n                name=\"description\"\n                type=\"textarea\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.description}\n              />\n              {formik.touched.description && formik.errors.description ? (\n                <div>{formik.errors.description} </div>\n              ) : null}\n\n              <MDBInput\n                label=\"Github\"\n                id=\"github\"\n                name=\"github\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.github}\n              />\n              {formik.touched.github && formik.errors.github ? (\n                <div>{formik.errors.github}</div>\n              ) : null}\n\n              <input type=\"file\" name=\"files\" id=\"\" onChange={buttonClick} />\n              {formik.touched.image && formik.errors.image ? (\n                <div>{formik.errors.image}</div>\n              ) : null}\n              <br />\n              <MDBBtn id=\"btn-primary\" onClick={uploadTheImage}>\n                Upload image{\" \"}\n              </MDBBtn>\n\n              <MDBBtn id=\"btn-primary\" type=\"submit\" color=\"primary\">\n                Add\n              </MDBBtn>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </div>\n  );\n};\n\nexport default AddProjectForm;\n"]},"metadata":{},"sourceType":"module"}