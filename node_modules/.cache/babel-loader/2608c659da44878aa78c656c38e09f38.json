{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/AddProject.jsx\";\nimport React, { Component } from 'react';\nimport { useFormik } from 'formik';\nimport { Col, Row, Form, Container, Button } from 'react-bootstrap';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.email = 'Required';\n  }\n\n  if (!values.description) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst AddProjectForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      image: '',\n      github: '',\n      link: ''\n    },\n    validate,\n    onSubmit: async values => {//   login(values)\n      //   .then(res =>{\n      //     if(res.data==\"1\"){\n      //       alert(\"password is incorrect\")\n      //     }else if(res.data==\"2\"){\n      //       alert(\"email not found\")\n      //     }else{\n      //       localStorage.setItem('usertoken' , res.data)\n      //       alert(\"login successfully\")\n      //     } \n      //     })\n      //   .catch(err=>console.log(err))\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Title\",\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), formik.touched.title && formik.errors.title ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, formik.errors.title) : null, React.createElement(MDBInput, {\n    label: \"Description\",\n    id: \"description\",\n    name: \"description\",\n    type: \"textarea\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), formik.touched.description && formik.errors.description ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, formik.errors.description) : null, React.createElement(MDBInput, {\n    label: \"Image\",\n    id: \"image\",\n    name: \"image\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), formik.touched.image && formik.errors.image ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, formik.errors.image) : null, React.createElement(MDBInput, {\n    label: \"Github\",\n    id: \"github\",\n    name: \"github\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.github,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), formik.touched.github && formik.errors.github ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, formik.errors.github) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Login\")))));\n};\n\nexport default AddProjectForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/AddProject.jsx"],"names":["React","Component","useFormik","Col","Row","Form","Container","Button","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","validate","values","errors","title","email","description","password","AddProjectForm","formik","initialValues","image","github","link","onSubmit","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { useFormik } from 'formik';\nimport { Col, Row, Form, Container, Button } from 'react-bootstrap';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n    const errors = {};\n  \n    if (!values.title) {\n      errors.email = 'Required';\n    }\n  \n    if (!values.description) {\n      errors.password = \"Required\"\n    }\n\n    return errors;\n  };\n\nconst AddProjectForm = () => {\n    const formik = useFormik({\n        initialValues: {\n          title: '',\n          description: '',\n          image:'',\n          github:'',\n          link:''\n        },\n        validate,\n        onSubmit: async (values) => {\n        //   login(values)\n        //   .then(res =>{\n        //     if(res.data==\"1\"){\n        //       alert(\"password is incorrect\")\n        //     }else if(res.data==\"2\"){\n        //       alert(\"email not found\")\n        //     }else{\n        //       localStorage.setItem('usertoken' , res.data)\n        //       alert(\"login successfully\")\n        //     } \n        //     })\n        //   .catch(err=>console.log(err))\n        },\n      });\n      return (\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"6\">\n              <form onSubmit={formik.handleSubmit}>  \n                <MDBInput\n                  label=\"Title\"\n                  id=\"title\"\n                  name=\"title\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.title}\n                />\n                {formik.touched.title && formik.errors.title ? (\n                  <div>{formik.errors.title}</div>\n                ) : null}\n                <MDBInput\n                  label=\"Description\"\n                  id=\"description\"\n                  name=\"description\"\n                  type=\"textarea\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.description}\n                />\n                {formik.touched.description && formik.errors.description ? (\n                  <div>{formik.errors.description}</div>\n                ) : null}\n\n                <MDBInput\n                  label=\"Image\"\n                  id=\"image\"\n                  name=\"image\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.image}\n                />\n                {formik.touched.image && formik.errors.image ? (\n                  <div>{formik.errors.image}</div>\n                ) : null}\n\n                <MDBInput\n                  label=\"Github\"\n                  id=\"github\"\n                  name=\"github\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.github}\n                />\n                {formik.touched.github && formik.errors.github ? (\n                  <div>{formik.errors.github}</div>\n                ) : null}\n\n                <MDBBtn type=\"submit\" color=\"primary\">Login</MDBBtn>\n              </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      );\n    };\n\nexport default AddProjectForm;"]},"metadata":{},"sourceType":"module"}