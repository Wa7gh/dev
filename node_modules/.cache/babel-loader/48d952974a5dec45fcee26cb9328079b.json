{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth';\nimport { Link } from \"react-router-dom\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastname = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role: 1\n    },\n    validate,\n    onSubmit: async values => {\n      console.log(values);\n      register(values).then(r => {\n        //1 means email is in use\n        if (r.msg == \"1\") {\n          alert(\"Email is already in use\");\n        } else if (r.msg == \"0\") {\n          alert(\"username is already in use\");\n        } else if (r.msg == \"3\") {\n          console.log(r.user); //redirect to the add portfolio and send the user id with it\n\n          alert(\"User registered!\");\n        }\n      }).catch(err => console.log(err)); // alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Developer\"), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstname\",\n    name: \"firstname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastname\",\n    name: \"lastname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n    label: \"Username\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Confirm password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.cpassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/addPortfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \" Register \"))))));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx"],"names":["React","useFormik","register","Link","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","validate","values","errors","firstname","length","firstName","lastname","email","test","password","cpassword","username","SignupForm","formik","initialValues","role","onSubmit","console","log","then","r","msg","alert","user","catch","err","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth'\nimport {Link} from \"react-router-dom\"\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastname = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\"\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\"\n    }\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\"\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role:1\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values)\n      register(values)\n        .then(r => {\n          //1 means email is in use\n          if(r.msg==\"1\"){\n            alert(\"Email is already in use\")\n          }else if(r.msg==\"0\"){\n            alert(\"username is already in use\")\n          }else if(r.msg==\"3\"){\n            console.log(r.user)\n            //redirect to the add portfolio and send the user id with it\n            alert(\"User registered!\")\n          }\n        }\n        )\n        .catch(err => console.log(err))\n      // alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <MDBContainer>\n\n      <p>Developer</p>\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>\n            <MDBInput\n              label=\"First name\"\n              id=\"firstname\"\n              name=\"firstname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.firstname}\n            />\n            {formik.touched.firstname && formik.errors.firstname ? (\n              <div>{formik.errors.firstname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Last name\"\n              id=\"lastname\"\n              name=\"lastname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.lastname}\n            />\n            {formik.touched.lastname && formik.errors.lastname ? (\n              <div>{formik.errors.lastname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n            {formik.touched.username && formik.errors.username ? (\n              <div>{formik.errors.username}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Confirm password\"\n              id=\"cpassword\"\n              name=\"cpassword\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.cpassword}\n            />\n            {formik.touched.cpassword && formik.errors.cpassword ? (\n              <div>{formik.errors.cpassword}</div>\n            ) : null}\n\n            <MDBBtn type=\"submit\" color=\"primary\">\n              \n              <Link to = \"/addPortfolio\" > Register </Link></MDBBtn>\n            {/* <Button type=\"submit\">Submit</Button> */}\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}