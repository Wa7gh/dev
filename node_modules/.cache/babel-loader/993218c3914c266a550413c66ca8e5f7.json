{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role: 1\n    },\n    validate,\n    onSubmit: async values => {\n      console.log(values);\n      register(values).then(r => {\n        //1 means email is in use\n        if (r.data == \"1\") {\n          alert(\"Email is already in use\");\n        } else if (r.data == \"0\") {\n          alert(\"username is already in use\");\n        } else if (r.data == \"3\") {\n          alert(\"User registered!\");\n        }\n      }).catch(err => console.log(err)); // alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Developer\"), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstName\",\n    name: \"firstName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), formik.touched.firstName && formik.errors.firstName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, formik.errors.firstName) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastName\",\n    name: \"lastName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), formik.touched.lastName && formik.errors.lastName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, formik.errors.lastName) : null, React.createElement(MDBInput, {\n    label: \"Username\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Confirm password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.cpassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Register\")))));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx"],"names":["React","useFormik","register","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","validate","values","errors","firstname","length","firstName","lastname","lastName","email","test","password","cpassword","username","SignupForm","formik","initialValues","role","onSubmit","console","log","then","r","data","alert","catch","err","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\"\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\"\n    }\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\"\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role:1\n    },\n    validate,\n    onSubmit: async (values) => {\n      console.log(values)\n      register(values)\n        .then(r => {\n          //1 means email is in use\n          if(r.data==\"1\"){\n            alert(\"Email is already in use\")\n          }else if(r.data==\"0\"){\n            alert(\"username is already in use\")\n          }else if(r.data==\"3\"){\n            alert(\"User registered!\")\n          }\n        }\n        )\n        .catch(err => console.log(err))\n      // alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <MDBContainer>\n\n      <p>Developer</p>\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>\n            <MDBInput\n              label=\"First name\"\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.firstName}\n            />\n            {formik.touched.firstName && formik.errors.firstName ? (\n              <div>{formik.errors.firstName}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Last name\"\n              id=\"lastName\"\n              name=\"lastName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.lastName}\n            />\n            {formik.touched.lastName && formik.errors.lastName ? (\n              <div>{formik.errors.lastName}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n            {formik.touched.username && formik.errors.username ? (\n              <div>{formik.errors.username}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Confirm password\"\n              id=\"cpassword\"\n              name=\"cpassword\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.cpassword}\n            />\n            {formik.touched.cpassword && formik.errors.cpassword ? (\n              <div>{formik.errors.cpassword}</div>\n            ) : null}\n\n            <MDBBtn type=\"submit\" color=\"primary\">Register</MDBBtn>\n            {/* <Button type=\"submit\">Submit</Button> */}\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}