{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Login.jsx\";\nimport React, { useState } from 'react';\nimport imgre from \"../Images/imgre.png\";\nimport { useFormik } from 'formik';\nimport Typical from 'react-typical';\nimport { login } from './functionAuth';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport { Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport \"./Atho.css\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        emp = _useState6[0],\n        setEmp = _useState6[1];\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: async values => {\n      login(values).then(res => {\n        if (res.data === \"1\") {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'warning',\n            title: 'password is incorrect',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } else if (res.data === \"2\") {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'info',\n            title: 'email not found',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } else {\n          localStorage.setItem('usertoken', res.data);\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'login successfully',\n            showConfirmButton: false,\n            timer: 1500\n          });\n\n          if (jwt_decode(localStorage.usertoken).user.role === \"1\") {\n            setUsername(jwt_decode(localStorage.usertoken).user.username);\n            setShow(!show);\n            window.location.reload();\n          } else {\n            setEmp(!emp);\n            window.location.reload();\n          }\n        }\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: '100%',\n      height: '150%'\n    },\n    src: imgre,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Typical, {\n    className: \"deverlperReg\",\n    steps: ['Login to your', 1500, 'Login to your account....', 50000],\n    loop: Infinity,\n    wrapper: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, show && React.createElement(Redirect, {\n    to: {\n      pathname: `/Portfolio/${username}`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), emp && React.createElement(Redirect, {\n    to: {\n      pathname: `/`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"bot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Login\"))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Login.jsx"],"names":["React","useState","imgre","useFormik","Typical","login","MDBContainer","MDBRow","MDBCol","MDBInput","Swal","Redirect","jwt_decode","validate","values","errors","email","test","password","LoginForm","show","setShow","username","setUsername","emp","setEmp","formik","initialValues","onSubmit","then","res","data","fire","position","icon","title","showConfirmButton","timer","localStorage","setItem","usertoken","user","role","window","location","reload","catch","err","console","log","width","height","Infinity","pathname","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React ,{ useState } from 'react';\nimport imgre from \"../Images/imgre.png\"\nimport { useFormik } from 'formik';\nimport Typical from 'react-typical'\nimport { login } from './functionAuth'\nimport { MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\nimport { Redirect } from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nimport \"./Atho.css\"\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const [show, setShow] = useState(false);\n  const [username, setUsername] = useState(false);\n  const [emp, setEmp] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: async (values) => {\n      login(values)\n        .then(res => {\n\n          if (res.data === \"1\") {\n\n            Swal.fire({\n              position: 'top-end',\n              icon: 'warning',\n              title: 'password is incorrect',\n              showConfirmButton: false,\n              timer: 1500\n            })\n\n\n          } else if (res.data === \"2\") {\n\n            Swal.fire({\n              position: 'top-end',\n              icon: 'info',\n              title: 'email not found',\n              showConfirmButton: false,\n              timer: 1500\n            })\n\n          } else {\n            localStorage.setItem('usertoken', res.data)\n\n            Swal.fire({\n              position: 'top-end',\n              icon: 'success',\n              title: 'login successfully',\n              showConfirmButton: false,\n              timer: 1500\n            })\n\n            if (jwt_decode(localStorage.usertoken).user.role === \"1\") {\n              setUsername(jwt_decode(localStorage.usertoken).user.username)\n              setShow(!show)\n              window.location.reload()\n            } else {\n              setEmp(!emp)\n              window.location.reload()\n            }\n          }\n        }).catch(err => console.log(err))\n    },\n  });\n  return (\n    <div>\n      <img style={{ width: '100%', height: '150%' }} src={imgre} alt = \"\" />\n\n\n      <Typical className=\"deverlperReg\"\n        steps={['Login to your', 1500, 'Login to your account....', 50000]}\n        loop={Infinity}\n        wrapper=\"p\"\n      />\n\n      <MDBContainer className=\"register\" >\n        {show && <Redirect to={{ pathname: `/Portfolio/${username}` }} />}\n\n\n        {emp && <Redirect to={{ pathname: `/` }} />}\n\n        {/* {emp && <Redirect to={{ pathname: `/EmpDash` }} />}  */}\n\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={formik.handleSubmit}>\n              <MDBInput\n                label=\"Email\"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n              />\n              {formik.touched.email && formik.errors.email ? (\n                <div>{formik.errors.email}</div>\n              ) : null}\n              <MDBInput\n                label=\"Password\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n              />\n              {formik.touched.password && formik.errors.password ? (\n                <div>{formik.errors.password}</div>\n              ) : null}\n              <button type=\"submit\" className=\"bot\" >Login</button >\n\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}