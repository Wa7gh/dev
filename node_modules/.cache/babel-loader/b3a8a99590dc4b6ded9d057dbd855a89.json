{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/Node-backend/frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/Node-backend/frontend-1/src/portfolio/AddPortfolio.jsx\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { addpro } from \"./functionPro\";\nimport { Redirect } from \"react-router-dom\";\nimport Typical from \"react-typical\";\nimport \"../Atho/Atho.css\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\nimport { fileUploadHandler, getImagesUrl } from \"../ImageUpload/UploadImage\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.education) {\n    errors.education = \"Required\";\n  }\n\n  if (!values.jobPosition) {\n    errors.jobPosition = \"Required\";\n  }\n\n  if (!values.brandstatment) {\n    errors.brandstatment = \"Required\";\n  }\n\n  if (!values.github) {\n    errors.github = \"Required\";\n  }\n\n  if (!values.linkdin) {\n    errors.linkdin = \"Required\";\n  }\n\n  if (!values.twitter) {\n    errors.linkdin = \"Required\";\n  }\n\n  return errors;\n};\n\nconst AddPortfolio = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const buttonClick = event => {\n    if (event.target.files[0]) {\n      const img = event.target.files[0];\n      formik.values.img = img;\n    }\n  };\n\n  const uploadTheImage = () => {\n    fileUploadHandler(formik.values.img);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      user: props.user_id,\n      education: \"\",\n      img: \"\",\n      jobPosition: \"\",\n      brandstatment: \"\",\n      github: \"\",\n      linkdin: \"\",\n      twitter: \"\"\n    },\n    validate,\n    onSubmit: async values => {\n      getImagesUrl(values.img.name).then(url => {\n        values.img = url;\n        addpro(values).then(r => {\n          setShow(!show);\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"success\",\n            title: \"Successfully added your information\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }).catch(err => console.log(err));\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typical, {\n    className: \"deverlperReg\",\n    steps: [\"Enter your Informati\", 1500, \"Enter your Information ....\", 50000],\n    loop: Infinity,\n    wrapper: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, show && React.createElement(Redirect, {\n    to: {\n      pathname: `/login`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"education\",\n    id: \"education\",\n    name: \"education\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), formik.touched.education && formik.errors.education ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, formik.errors.education) : null, React.createElement(MDBInput, {\n    label: \"Job position\",\n    id: \"jobPosition\",\n    name: \"jobPosition\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.jobPosition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), formik.touched.jobPosition && formik.errors.jobPosition ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, formik.errors.jobPosition) : null, React.createElement(MDBInput, {\n    label: \"Brand statment\",\n    id: \"brandstatment\",\n    name: \"brandstatment\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.brandstatment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), formik.touched.brandstatment && formik.errors.brandstatment ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, formik.errors.brandstatment) : null, React.createElement(MDBInput, {\n    label: \"Github\",\n    id: \"github\",\n    name: \"github\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.github,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), formik.touched.github && formik.errors.github ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, formik.errors.github) : null, React.createElement(MDBInput, {\n    label: \"Linkdin\",\n    id: \"linkdin\",\n    name: \"linkdin\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.linkdin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), formik.touched.linkdin && formik.errors.linkdin ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, formik.errors.linkdin) : null, React.createElement(MDBInput, {\n    label: \"twitter\",\n    id: \"twitter\",\n    name: \"twitter\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.twitter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), formik.touched.twitter && formik.errors.twitter ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, formik.errors.twitter) : null, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    id: \"\",\n    onChange: buttonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"bot1\",\n    onClick: uploadTheImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Upload image\", \" \"), React.createElement(\"button\", {\n    className: \"bot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \" Submit \"))))));\n};\n\nexport default AddPortfolio;","map":{"version":3,"sources":["/Users/macbook/Desktop/Node-backend/frontend-1/src/portfolio/AddPortfolio.jsx"],"names":["React","useState","useFormik","addpro","Redirect","Typical","Swal","MDBContainer","MDBRow","MDBCol","MDBInput","fileUploadHandler","getImagesUrl","validate","values","errors","education","jobPosition","brandstatment","github","linkdin","twitter","AddPortfolio","props","show","setShow","buttonClick","event","target","files","img","formik","uploadTheImage","initialValues","user","user_id","onSubmit","name","then","url","r","fire","position","icon","title","showConfirmButton","timer","catch","err","console","log","Infinity","pathname","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { addpro } from \"./functionPro\";\nimport { Redirect } from \"react-router-dom\";\nimport Typical from \"react-typical\";\nimport \"../Atho/Atho.css\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\n\nimport { MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\nimport { fileUploadHandler, getImagesUrl } from \"../ImageUpload/UploadImage\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.education) {\n    errors.education = \"Required\";\n  }\n\n  if (!values.jobPosition) {\n    errors.jobPosition = \"Required\";\n  }\n\n  if (!values.brandstatment) {\n    errors.brandstatment = \"Required\";\n  }\n\n  if (!values.github) {\n    errors.github = \"Required\";\n  }\n\n  if (!values.linkdin) {\n    errors.linkdin = \"Required\";\n  }\n\n  if (!values.twitter) {\n    errors.linkdin = \"Required\";\n  }\n\n  return errors;\n};\n\nconst AddPortfolio = props => {\n  const [show, setShow] = useState(false);\n\n  const buttonClick = event => {\n    if (event.target.files[0]) {\n      const img = event.target.files[0];\n      formik.values.img = img;\n    }\n  };\n\n  const uploadTheImage = () => {\n    fileUploadHandler(formik.values.img);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      user: props.user_id,\n      education: \"\",\n      img: \"\",\n      jobPosition: \"\",\n      brandstatment: \"\",\n      github: \"\",\n      linkdin: \"\",\n      twitter: \"\"\n    },\n    validate,\n    onSubmit: async values => {\n      getImagesUrl(values.img.name).then(url => {\n        values.img = url;\n        addpro(values)\n          .then(r => {\n            setShow(!show);\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Successfully added your information\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          })\n          .catch(err => console.log(err));\n      });\n    }\n  });\n  return (\n    <div>\n      <Typical\n        className=\"deverlperReg\"\n        steps={[\n          \"Enter your Informati\",\n          1500,\n          \"Enter your Information ....\",\n          50000\n        ]}\n        loop={Infinity}\n        wrapper=\"p\"\n      />\n\n      <MDBContainer className=\"register\">\n        {show && <Redirect to={{ pathname: `/login` }} />}\n\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={formik.handleSubmit}>\n              <MDBInput\n                label=\"education\"\n                id=\"education\"\n                name=\"education\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.education}\n              />\n              {formik.touched.education && formik.errors.education ? (\n                <div>{formik.errors.education}</div>\n              ) : null}\n\n              <MDBInput\n                label=\"Job position\"\n                id=\"jobPosition\"\n                name=\"jobPosition\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.jobPosition}\n              />\n              {formik.touched.jobPosition && formik.errors.jobPosition ? (\n                <div>{formik.errors.jobPosition}</div>\n              ) : null}\n\n              <MDBInput\n                label=\"Brand statment\"\n                id=\"brandstatment\"\n                name=\"brandstatment\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.brandstatment}\n              />\n              {formik.touched.brandstatment && formik.errors.brandstatment ? (\n                <div>{formik.errors.brandstatment}</div>\n              ) : null}\n              <MDBInput\n                label=\"Github\"\n                id=\"github\"\n                name=\"github\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.github}\n              />\n              {formik.touched.github && formik.errors.github ? (\n                <div>{formik.errors.github}</div>\n              ) : null}\n\n              <MDBInput\n                label=\"Linkdin\"\n                id=\"linkdin\"\n                name=\"linkdin\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.linkdin}\n              />\n              {formik.touched.linkdin && formik.errors.linkdin ? (\n                <div>{formik.errors.linkdin}</div>\n              ) : null}\n\n              <MDBInput\n                label=\"twitter\"\n                id=\"twitter\"\n                name=\"twitter\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.twitter}\n              />\n              {formik.touched.twitter && formik.errors.twitter ? (\n                <div>{formik.errors.twitter}</div>\n              ) : null}\n\n              <input type=\"file\" name=\"files\" id=\"\" onChange={buttonClick} />\n              <br />\n              <button className=\"bot1\" onClick={uploadTheImage}>\n                Upload image{\" \"}\n              </button>\n              <button className=\"bot\"> Submit </button>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </div>\n  );\n};\n\nexport default AddPortfolio;\n"]},"metadata":{},"sourceType":"module"}