{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/Editprofile.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useFormik } from 'formik';\nimport { localhost } from '../GlobalVars';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstname) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.lastname) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  return errors;\n};\n\nconst EditForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: jwt_decode(localStorage.usertoken).user.firstname,\n      lastname: jwt_decode(localStorage.usertoken).user.lastname,\n      link: jwt_decode(localStorage.usertoken).user.link,\n      username: jwt_decode(localStorage.usertoken).user.username,\n      user: jwt_decode(localStorage.usertoken).user\n    },\n    validate,\n    onSubmit: async values => {\n      console.log(\"In submit Handler\");\n      axios.put(`${localhost}/user/changedetails/${values.user._id}`, values).then(res => {\n        console.log(res.data.msg);\n\n        if (res.data.msg == \"1\") {\n          alert(\"Username is in use\");\n        } else if (res.data.msg == \"2\") {\n          alert(\"update successfully\");\n          localStorage.removeItem('usertoken');\n          axios.post(`${localhost}/user/edit/token`, res.data.user).then(res2 => {\n            localStorage.setItem('usertoken', res2.data); // setTimeout(() => {\n            //     this.props.history.push('/profile')\n            // }, 500)\n          });\n        } else {\n          alert(\"error\");\n        }\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstname\",\n    name: \"firstname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastname\",\n    name: \"lastname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n    label: \"Username\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(MDBInput, {\n    label: \"Link\",\n    id: \"link\",\n    name: \"link\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(MDBBtn, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Change password\"), React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    onClick: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/Editprofile.jsx"],"names":["React","Component","Form","Button","Alert","jwt_decode","axios","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","useFormik","localhost","validate","values","errors","firstname","password","lastname","username","EditForm","formik","initialValues","localStorage","usertoken","user","link","onSubmit","console","log","put","_id","then","res","data","msg","alert","removeItem","post","res2","setItem","catch","err","handleChange","handleBlur","touched","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport jwt_decode from 'jwt-decode'\nimport axios from 'axios'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useFormik } from 'formik';\nimport { localhost } from '../GlobalVars'\n\nconst validate = values => {\n    const errors = {};\n    if (!values.firstname) {\n        errors.password = \"Required\"\n    }\n\n    if (!values.lastname) {\n        errors.password = \"Required\"\n    }\n\n    if (!values.username) {\n        errors.username = \"Required\"\n    }\n    return errors;\n};\n\nconst EditForm = () => {\n    const formik = useFormik({\n        initialValues: {\n            firstname: jwt_decode(localStorage.usertoken).user.firstname,\n            lastname: jwt_decode(localStorage.usertoken).user.lastname,\n            link: jwt_decode(localStorage.usertoken).user.link,\n            username: jwt_decode(localStorage.usertoken).user.username,\n            user: jwt_decode(localStorage.usertoken).user\n        },\n        validate,\n        onSubmit: async (values) => {\n            console.log(\"In submit Handler\")\n\n            axios.put(`${localhost}/user/changedetails/${values.user._id}`, values)\n                .then(res => {\n                    console.log(res.data.msg)\n                    if (res.data.msg == \"1\") {\n                        alert(\"Username is in use\")\n                    } else if (res.data.msg == \"2\") {\n                        alert(\"update successfully\")\n                        localStorage.removeItem('usertoken')\n                        axios.post(`${localhost}/user/edit/token`, res.data.user)\n                            .then(res2 => {\n                                localStorage.setItem('usertoken', res2.data)\n                                // setTimeout(() => {\n                                //     this.props.history.push('/profile')\n                                // }, 500)\n                            })\n                    } else {\n                        alert(\"error\")\n                    }\n                })\n                .catch(err=>console.log(err))\n        },\n    });\n    return (\n        <MDBContainer>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <form>\n\n                        <MDBInput\n                            label=\"First name\"\n                            id=\"firstname\"\n                            name=\"firstname\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.firstname}\n                        />\n                        {formik.touched.firstname && formik.errors.firstname ? (\n                            <div>{formik.errors.firstname}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Last name\"\n                            id=\"lastname\"\n                            name=\"lastname\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.lastname}\n                        />\n                        {formik.touched.lastname && formik.errors.lastname ? (\n                            <div>{formik.errors.lastname}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Username\"\n                            id=\"username\"\n                            name=\"username\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.username}\n                        />\n                        {formik.touched.username && formik.errors.username ? (\n                            <div>{formik.errors.username}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Link\"\n                            id=\"link\"\n                            name=\"link\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.link}\n                        />\n                        <MDBBtn color=\"primary\">Change password</MDBBtn>\n                        <MDBBtn type=\"submit\" color=\"primary\" onClick={formik.handleSubmit}>Submit</MDBBtn>\n                    </form>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    );\n};\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}