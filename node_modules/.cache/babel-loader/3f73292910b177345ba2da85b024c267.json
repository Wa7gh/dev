{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth';\nimport { Link } from \"react-router-dom\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {// const errors = {};\n  // if (!values.firstname) {\n  //   errors.firstname = 'Required';\n  // } else if (values.firstname.length > 15) {\n  //   errors.firstName = 'Must be 15 characters or less';\n  // }\n  // if (!values.lastname) {\n  //   errors.lastname = 'Required';\n  // } else if (values.lastname.length > 20) {\n  //   errors.lastname = 'Must be 20 characters or less';\n  // }\n  // if (!values.email) {\n  //   errors.email = 'Required';\n  // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n  //   errors.email = 'Invalid email address';\n  // }\n  // if (!values.password) {\n  //   errors.password = \"Required\"\n  // }\n  // if (!values.cpassword) {\n  //   errors.cpassword = \"Required\"\n  // } else {\n  //   if (values.cpassword !== values.password) {\n  //     errors.cpassword = \"password doesn't match\"\n  //   }\n  // }\n  // if (!values.username) {\n  //   errors.username = \"Required\"\n  //}\n  //return errors;\n};\n\nconst SignupForm = props => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role: 1\n    },\n    validate,\n    onSubmit: async values => {\n      // console.log(values)\n      register(values).then(r => {\n        //1 means email is in use\n        if (r.msg == \"1\") {\n          alert(\"Email is already in use\");\n        } else if (r.msg == \"0\") {\n          alert(\"username is already in use\");\n        } else if (r.msg == \"3\") {\n          console.log(r.user); //redirect to the add portfolio and send the user id with it\n\n          alert(\"User registered!\");\n        }\n      }).catch(err => console.log(err));\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Developer\"), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstname\",\n    name: \"firstname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastname\",\n    name: \"lastname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n    label: \"Username\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Confirm password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.cpassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })))));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx"],"names":["React","useFormik","register","Link","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","validate","values","SignupForm","props","formik","initialValues","firstname","lastname","email","password","cpassword","username","role","onSubmit","then","r","msg","alert","console","log","user","catch","err","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth'\nimport {Link} from \"react-router-dom\"\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  // const errors = {};\n  // if (!values.firstname) {\n  //   errors.firstname = 'Required';\n  // } else if (values.firstname.length > 15) {\n  //   errors.firstName = 'Must be 15 characters or less';\n  // }\n\n  // if (!values.lastname) {\n  //   errors.lastname = 'Required';\n  // } else if (values.lastname.length > 20) {\n  //   errors.lastname = 'Must be 20 characters or less';\n  // }\n\n  // if (!values.email) {\n  //   errors.email = 'Required';\n  // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n  //   errors.email = 'Invalid email address';\n  // }\n\n  // if (!values.password) {\n  //   errors.password = \"Required\"\n  // }\n\n  // if (!values.cpassword) {\n  //   errors.cpassword = \"Required\"\n  // } else {\n  //   if (values.cpassword !== values.password) {\n  //     errors.cpassword = \"password doesn't match\"\n  //   }\n  // }\n\n  // if (!values.username) {\n  //   errors.username = \"Required\"\n  //}\n\n  //return errors;\n};\n\nconst SignupForm = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role:1\n    },\n    validate,\n    onSubmit: async (values) => {\n      \n      \n\n      // console.log(values)\n\n      register(values)\n        .then(r => {\n          //1 means email is in use\n          if(r.msg==\"1\"){\n            alert(\"Email is already in use\")\n          }else if(r.msg==\"0\"){\n            alert(\"username is already in use\")\n          }else if(r.msg==\"3\"){\n            console.log(r.user)\n            //redirect to the add portfolio and send the user id with it\n            alert(\"User registered!\")\n          }\n        }\n        )\n        .catch(err => console.log(err))\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <MDBContainer>\n\n      <p>Developer</p>\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>\n            <MDBInput\n              label=\"First name\"\n              id=\"firstname\"\n              name=\"firstname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.firstname}\n            />\n            {formik.touched.firstname && formik.errors.firstname ? (\n              <div>{formik.errors.firstname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Last name\"\n              id=\"lastname\"\n              name=\"lastname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.lastname}\n            />\n            {formik.touched.lastname && formik.errors.lastname ? (\n              <div>{formik.errors.lastname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n            {formik.touched.username && formik.errors.username ? (\n              <div>{formik.errors.username}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Confirm password\"\n              id=\"cpassword\"\n              name=\"cpassword\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.cpassword}\n            />\n            {formik.touched.cpassword && formik.errors.cpassword ? (\n              <div>{formik.errors.cpassword}</div>\n            ) : null}\n\n            <MDBBtn type=\"submit\" color=\"primary\">\n              {/* <Link to = \"/addPortfolio\" > Register </Link> */}\n              </MDBBtn>\n            {/* <Button type=\"submit\">Submit</Button> */}\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}