{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/project/EditProject.jsx\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport axios from \"axios\";\nimport { localhost } from \"../../GlobalVars\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.email = \"Required\";\n  }\n\n  if (!values.description) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst EditProjectForm = props => {\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      image: \"\",\n      github: \"\",\n      link: \"\"\n    },\n    validate,\n    onSubmit: async values => {\n      axios.put(`${localhost}/project/${props.location.state.data._id}`, values).then().catch(err => console.log(err));\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Title\",\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), formik.touched.title && formik.errors.title ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, formik.errors.title, \" \") : null, React.createElement(MDBInput, {\n    label: \"Description\",\n    id: \"description\",\n    name: \"description\",\n    type: \"textarea\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), formik.touched.description && formik.errors.description ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, formik.errors.description, \" \") : null, React.createElement(MDBInput, {\n    label: \"Image\",\n    id: \"image\",\n    name: \"image\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), formik.touched.image && formik.errors.image ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, formik.errors.image) : null, React.createElement(MDBInput, {\n    label: \"Github\",\n    id: \"github\",\n    name: \"github\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.github,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), formik.touched.github && formik.errors.github ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, formik.errors.github) : null, React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Edit\"))))));\n};\n\nexport default EditProjectForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/project/EditProject.jsx"],"names":["React","useFormik","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","axios","localhost","validate","values","errors","title","email","description","password","EditProjectForm","props","formik","initialValues","image","github","link","onSubmit","put","location","state","data","_id","then","catch","err","console","log","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport axios from \"axios\";\nimport { localhost } from \"../../GlobalVars\";\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) {\n    errors.email = \"Required\";\n  }\n  if (!values.description) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\nconst EditProjectForm = props => {\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      image: \"\",\n      github: \"\",\n      link: \"\"\n    },\n    validate,\n    onSubmit: async values => {\n      axios\n        .put(`${localhost}/project/${props.location.state.data._id}`, values)\n        .then()\n        .catch(err => console.log(err));\n    }\n  });\n  return (\n    <div>\n      <br />\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={formik.handleSubmit}>\n              <MDBInput\n                label=\"Title\"\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.title}\n              />\n              {formik.touched.title && formik.errors.title ? (\n                <div>{formik.errors.title} </div>\n              ) : null}\n              <MDBInput\n                label=\"Description\"\n                id=\"description\"\n                name=\"description\"\n                type=\"textarea\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.description}\n              />\n              {formik.touched.description && formik.errors.description ? (\n                <div>{formik.errors.description} </div>\n              ) : null}\n\n              <MDBInput\n                label=\"Image\"\n                id=\"image\"\n                name=\"image\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.image}\n              />\n              {formik.touched.image && formik.errors.image ? (\n                <div>{formik.errors.image}</div>\n              ) : null}\n              <MDBInput\n                label=\"Github\"\n                id=\"github\"\n                name=\"github\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.github}\n              />\n              {formik.touched.github && formik.errors.github ? (\n                <div>{formik.errors.github}</div>\n              ) : null}\n              <MDBBtn id=\"btn-primary\" type=\"submit\" color=\"primary\">\n                Edit\n              </MDBBtn>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </div>\n  );\n};\n\nexport default EditProjectForm;\n"]},"metadata":{},"sourceType":"module"}