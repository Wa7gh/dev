{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Components/Try.jsx\";\nimport React, { Component, useRef, useEffect } from 'react';\n\nconst scrollToRef = ref => window.scrollTo(0, ref.current.offsetTop);\n\nconst useMountEffect = fun => useEffect(fun, []);\n\nexport const Try = () => {\n  const myRef = useRef(null);\n  useMountEffect(() => scrollToRef(myRef)); // Scroll on mount\n\n  return React.createElement(React.Fragment, null, \" \", React.createElement(\"div\", {\n    style: {\n      height: 600\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \" \", React.createElement(\"button\", {\n    onClick: () => scrollToRef(myRef),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Click to scroll \"), React.createElement(\"div\", {\n    ref: myRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"I wanna be seen\"), React.createElement(\"div\", {\n    style: {\n      height: 1500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" \", React.createElement(\"button\", {\n    onClick: () => scrollToRef(myRef),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Click to scroll \"));\n};\nexport default Try;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Components/Try.jsx"],"names":["React","Component","useRef","useEffect","scrollToRef","ref","window","scrollTo","current","offsetTop","useMountEffect","fun","Try","myRef","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAoD,OAApD;;AAGA,MAAMC,WAAW,GAAIC,GAAD,IAASC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBF,GAAG,CAACG,OAAJ,CAAYC,SAA/B,CAA7B;;AACA,MAAMC,cAAc,GAAIC,GAAD,IAASR,SAAS,CAACQ,GAAD,EAAM,EAAN,CAAzC;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAGrB,QAAMC,KAAK,GAAGX,MAAM,CAAC,IAAD,CAApB;AAEHQ,EAAAA,cAAc,CAAC,MAAMN,WAAW,CAACS,KAAD,CAAlB,CAAd,CALwB,CAKiB;;AAEtC,SACI,+CACA;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,OAEA;AAAQ,IAAA,OAAO,EAAE,MAAIV,WAAW,CAACS,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,EAGA;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHA,EAKA;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,OAMA;AAAQ,IAAA,OAAO,EAAE,MAAIV,WAAW,CAACS,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANA,CADJ;AAWF,CAlBK;AAmBN,eAAeD,GAAf","sourcesContent":["import React, { Component, useRef, useEffect } from 'react';\n\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   \nconst useMountEffect = (fun) => useEffect(fun, [])\n\nexport const Try = () => {\n\n    \n    const myRef = useRef(null)\n\n\tuseMountEffect(() => scrollToRef(myRef)) // Scroll on mount\n \n    return (\n        <> {/* React.Fragment*/}\n        <div style={{height:600}} />\t{/* just to demonstrate scroll*/}\n        <button onClick={()=>scrollToRef(myRef)} >Click to scroll </button> \n        <div ref={myRef}>I wanna be seen</div> \n        {/* Attach ref object to a dom element */}\n        <div style={{height:1500}} />\t{/* just to demonstrate scroll*/}\n        <button onClick={()=>scrollToRef(myRef)} >Click to scroll </button> \n        {/* Scroll on click */}\n      </>\n    )\n }\n export default Try;"]},"metadata":{},"sourceType":"module"}