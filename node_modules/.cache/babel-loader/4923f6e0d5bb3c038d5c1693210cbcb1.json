{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Signup_emp.jsx\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport \"./Atho.css\";\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport { register } from './functionAuth';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport hire from '../Images/m.png';\nimport { Redirect } from 'react-router-dom';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstname = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastname = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      role: 2\n    },\n    validate,\n    onSubmit: async values => {\n      register(values).then(res => {\n        if (res.data.msg == \"1\") {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'error',\n            title: 'Email is already in use',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } else if (res.data.msg == \"3\") {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Register successfully',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          setShow();\n        }\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, show && React.createElement(Redirect, {\n    to: {\n      pathname: `/login`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    className: \"background\",\n    src: hire,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"titleEmp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Employee\"), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstname\",\n    name: \"firstname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastname\",\n    name: \"lastname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Confirm password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.cpassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"bot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Register\"))))));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Signup_emp.jsx"],"names":["React","useState","useFormik","Swal","register","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","hire","Redirect","validate","values","errors","firstname","length","lastname","email","test","password","cpassword","SignupForm","show","setShow","formik","initialValues","role","onSubmit","then","res","data","msg","fire","position","icon","title","showConfirmButton","timer","catch","err","console","log","pathname","width","height","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React ,{ useState } from 'react';\nimport { useFormik } from 'formik';\nimport \"./Atho.css\"\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\nimport { register } from './functionAuth'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport hire from '../Images/m.png'\nimport { Redirect } from 'react-router-dom'\n\nconst validate = values => {\n  const errors = {};\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstname = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastname = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\"\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\"\n    }\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n\n  const [show, setShow] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      role:2\n    },\n    validate,\n    onSubmit: async (values) => {\n      register(values)\n        .then(res => {\n          if(res.data.msg==\"1\"){\n            Swal.fire({\n              position: 'top-end',\n              icon: 'error',\n              title: 'Email is already in use',\n              showConfirmButton: false,\n              timer: 1500\n            })\n\n          \n          \n           \n          }else if(res.data.msg==\"3\"){\n\n\n            Swal.fire({\n              position: 'top-end',\n              icon: 'success',\n              title: 'Register successfully',\n              showConfirmButton: false,\n              timer: 1500\n            })\n\n            setShow()\n          }}\n        )\n        .catch(err => console.log(err))\n    },\n  });\n  return (\n\n    <div>\n      {show && <Redirect to={{ pathname: `/login` }} />}\n\n      \n       <img style={{ width: '100%', height: '100%'  }}  className=\"background\"\n                src={hire} />\n    <MDBContainer className=\"register\" >\n   <h1  className=\"titleEmp\" >Employee</h1>\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>\n            <MDBInput\n              label=\"First name\"\n              id=\"firstname\"\n              name=\"firstname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.firstname}\n            />\n            {formik.touched.firstname && formik.errors.firstname ? (\n              <div>{formik.errors.firstname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Last name\"\n              id=\"lastname\"\n              name=\"lastname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.lastname}\n            />\n            {formik.touched.lastname && formik.errors.lastname ? (\n              <div>{formik.errors.lastname}</div>\n            ) : null}\n\n\n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Confirm password\"\n              id=\"cpassword\"\n              name=\"cpassword\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.cpassword}\n            />\n            {formik.touched.cpassword && formik.errors.cpassword ? (\n              <div>{formik.errors.cpassword}</div>\n            ) : null}\n\n\n<button type=\"submit\" className=\"bot\"  >Register</button >\n          \n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}