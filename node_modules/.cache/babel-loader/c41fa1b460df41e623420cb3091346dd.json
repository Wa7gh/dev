{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/portfolio/AddPortfolio.jsx\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './function';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nfunction AddPortfolio() {\n  const SignupForm = props => {\n    const formik = useFormik({\n      initialValues: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        cpassword: '',\n        username: '',\n        role: 1\n      },\n      validate,\n      onSubmit: async values => {\n        // console.log(values)\n        register(values).then(r => {\n          console.log(r); //1 means email is in use\n\n          if (r.data.msg == \"1\") {\n            console.log(\"1\");\n            alert(\"Email is already in use\");\n          } else if (r.data.msg == \"0\") {\n            console.log(\"0\");\n            alert(\"username is already in use\");\n          } else if (r.data.msg == \"3\") {\n            console.log(\"3\");\n            console.log(r.data.user);\n            props.toggleSub(r.data.user); //redirect to the add portfolio and send the user id with it\n\n            alert(\"User registered!\");\n          }\n        }).catch(err => console.log(err)); // alert(JSON.stringify(values, null, 2));\n      }\n    });\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Developer\"), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"First name\",\n      id: \"firstname\",\n      name: \"firstname\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.firstname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n      label: \"Last name\",\n      id: \"lastname\",\n      name: \"lastname\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.lastname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n      label: \"Username\",\n      id: \"username\",\n      name: \"username\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, formik.errors.username) : null, React.createElement(MDBInput, {\n      label: \"Email\",\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, formik.errors.email) : null, React.createElement(MDBInput, {\n      label: \"Password\",\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, formik.errors.password) : null, React.createElement(MDBInput, {\n      label: \"Confirm password\",\n      id: \"cpassword\",\n      name: \"cpassword\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.cpassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })))));\n  };\n}\n\n;\nexport default AddPortfolio;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/portfolio/AddPortfolio.jsx"],"names":["React","useFormik","register","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","AddPortfolio","SignupForm","props","formik","initialValues","firstname","lastname","email","password","cpassword","username","role","validate","onSubmit","values","then","r","console","log","data","msg","alert","user","toggleSub","catch","err","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,UAA/D;;AAEA,SAASC,YAAT,GAAwB;AAKtB,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMC,MAAM,GAAGV,SAAS,CAAC;AACvBW,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE,EADE;AAEbC,QAAAA,QAAQ,EAAE,EAFG;AAGbC,QAAAA,KAAK,EAAE,EAHM;AAIbC,QAAAA,QAAQ,EAAE,EAJG;AAKbC,QAAAA,SAAS,EAAE,EALE;AAMbC,QAAAA,QAAQ,EAAE,EANG;AAObC,QAAAA,IAAI,EAAC;AAPQ,OADQ;AAUvBC,MAAAA,QAVuB;AAWvBC,MAAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAI1B;AAEApB,QAAAA,QAAQ,CAACoB,MAAD,CAAR,CACGC,IADH,CACQC,CAAC,IAAI;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADS,CAET;;AACA,cAAGA,CAAC,CAACG,IAAF,CAAOC,GAAP,IAAY,GAAf,EAAmB;AACjBH,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAG,YAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,WAHD,MAGM,IAAGL,CAAC,CAACG,IAAF,CAAOC,GAAP,IAAY,GAAf,EAAmB;AACvBH,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAG,YAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,WAHK,MAGA,IAAGL,CAAC,CAACG,IAAF,CAAOC,GAAP,IAAY,GAAf,EAAmB;AACvBH,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAF,CAAOG,IAAnB;AACApB,YAAAA,KAAK,CAACqB,SAAN,CAAgBP,CAAC,CAACG,IAAF,CAAOG,IAAvB,EAHuB,CAIvB;;AACAD,YAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,SAjBH,EAmBGG,KAnBH,CAmBSC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAnBhB,EAN0B,CA0B1B;AACD;AAtCsB,KAAD,CAAxB;AAgDF,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAEtB,MAAM,CAACuB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAEvB,MAAM,CAACwB,YALnB;AAME,MAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,MAAA,KAAK,EAAEzB,MAAM,CAACW,MAAP,CAAcT,SAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUGF,MAAM,CAAC0B,OAAP,CAAexB,SAAf,IAA4BF,MAAM,CAAC2B,MAAP,CAAczB,SAA1C,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,MAAM,CAAC2B,MAAP,CAAczB,SAApB,CADD,GAEG,IAZN,EAcE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAEF,MAAM,CAACwB,YALnB;AAME,MAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,MAAA,KAAK,EAAEzB,MAAM,CAACW,MAAP,CAAcR,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAuBGH,MAAM,CAAC0B,OAAP,CAAevB,QAAf,IAA2BH,MAAM,CAAC2B,MAAP,CAAcxB,QAAzC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,MAAM,CAAC2B,MAAP,CAAcxB,QAApB,CADD,GAEG,IAzBN,EA2BE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAEH,MAAM,CAACwB,YALnB;AAME,MAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,MAAA,KAAK,EAAEzB,MAAM,CAACW,MAAP,CAAcJ,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAoCGP,MAAM,CAAC0B,OAAP,CAAenB,QAAf,IAA2BP,MAAM,CAAC2B,MAAP,CAAcpB,QAAzC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMP,MAAM,CAAC2B,MAAP,CAAcpB,QAApB,CADD,GAEG,IAtCN,EAwCE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,EAAEP,MAAM,CAACwB,YALnB;AAME,MAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,MAAA,KAAK,EAAEzB,MAAM,CAACW,MAAP,CAAcP,KAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EAiDGJ,MAAM,CAAC0B,OAAP,CAAetB,KAAf,IAAwBJ,MAAM,CAAC2B,MAAP,CAAcvB,KAAtC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,MAAM,CAAC2B,MAAP,CAAcvB,KAApB,CADD,GAEG,IAnDN,EAoDE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,EAAEJ,MAAM,CAACwB,YALnB;AAME,MAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,MAAA,KAAK,EAAEzB,MAAM,CAACW,MAAP,CAAcN,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDF,EA6DGL,MAAM,CAAC0B,OAAP,CAAerB,QAAf,IAA2BL,MAAM,CAAC2B,MAAP,CAActB,QAAzC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,MAAM,CAAC2B,MAAP,CAActB,QAApB,CADD,GAEG,IA/DN,EAiEE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,EAAEL,MAAM,CAACwB,YALnB;AAME,MAAA,MAAM,EAAExB,MAAM,CAACyB,UANjB;AAOE,MAAA,KAAK,EAAEzB,MAAM,CAACW,MAAP,CAAcL,SAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjEF,EA0EGN,MAAM,CAAC0B,OAAP,CAAepB,SAAf,IAA4BN,MAAM,CAAC2B,MAAP,CAAcrB,SAA1C,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,MAAM,CAAC2B,MAAP,CAAcrB,SAApB,CADD,GAEG,IA5EN,EA8EE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9EF,CADF,CADF,CAHA,CADF;AA6FD,GA9IC;AA+ID;;AAAA;AAED,eAAeT,YAAf","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik';\nimport { register } from './function'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nfunction AddPortfolio() {\n\n\n\n\n  const SignupForm = (props) => {\n    const formik = useFormik({\n      initialValues: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        cpassword: '',\n        username: '',\n        role:1\n      },\n      validate,\n      onSubmit: async (values) => {\n        \n        \n  \n        // console.log(values)\n  \n        register(values)\n          .then(r => {\n            console.log(r)\n            //1 means email is in use\n            if(r.data.msg==\"1\"){\n              console.log(\"1\")\n              alert(\"Email is already in use\")\n            }else if(r.data.msg==\"0\"){\n              console.log(\"0\")\n              alert(\"username is already in use\")\n            }else if(r.data.msg==\"3\"){\n              console.log(\"3\")\n              console.log(r.data.user)\n              props.toggleSub(r.data.user)\n              //redirect to the add portfolio and send the user id with it\n              alert(\"User registered!\")\n            }\n          }\n          )\n          .catch(err => console.log(err))\n        // alert(JSON.stringify(values, null, 2));\n      },\n    });\n\n\n\n\n\n\n\n\n  return (\n    <MDBContainer>\n\n    <p>Developer</p>\n    <MDBRow>\n      <MDBCol md=\"6\">\n        <form onSubmit={formik.handleSubmit}>\n          <MDBInput\n            label=\"First name\"\n            id=\"firstname\"\n            name=\"firstname\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.firstname}\n          />\n          {formik.touched.firstname && formik.errors.firstname ? (\n            <div>{formik.errors.firstname}</div>\n          ) : null}\n\n          <MDBInput\n            label=\"Last name\"\n            id=\"lastname\"\n            name=\"lastname\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.lastname}\n          />\n          {formik.touched.lastname && formik.errors.lastname ? (\n            <div>{formik.errors.lastname}</div>\n          ) : null}\n\n          <MDBInput\n            label=\"Username\"\n            id=\"username\"\n            name=\"username\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.username}\n          />\n          {formik.touched.username && formik.errors.username ? (\n            <div>{formik.errors.username}</div>\n          ) : null}\n\n          <MDBInput\n            label=\"Email\"\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n          <MDBInput\n            label=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <div>{formik.errors.password}</div>\n          ) : null}\n\n          <MDBInput\n            label=\"Confirm password\"\n            id=\"cpassword\"\n            name=\"cpassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.cpassword}\n          />\n          {formik.touched.cpassword && formik.errors.cpassword ? (\n            <div>{formik.errors.cpassword}</div>\n          ) : null}\n\n          <MDBBtn type=\"submit\" color=\"primary\">\n            {/* <Link to = \"/addPortfolio\" > Register </Link> */}\n            </MDBBtn>\n          {/* <Button type=\"submit\">Submit</Button> */}\n        </form>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n  )\n}\n};\n\nexport default AddPortfolio\n"]},"metadata":{},"sourceType":"module"}