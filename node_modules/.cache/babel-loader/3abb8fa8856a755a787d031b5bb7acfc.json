{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Developer_dash/ChangePass.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useFormik } from 'formik';\nimport { localhost } from '../GlobalVars';\nimport '../App.css';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.newPassword) {\n    errors.newPassword = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.newPassword) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n\n  return errors;\n};\n\nconst ChangepassForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      newpassword: '',\n      cpassword: ''\n    },\n    validate,\n    onSubmit: async values => {\n      axios.put(`${localhost}/user/changepass/${jwt_decode(localStorage.usertoken).user._id}`, {\n        password: values.password,\n        newPassword: values.newPassword\n      }).then(res => {\n        if (\"1\" == res.data) {\n          alert(\"Old password is not correct\");\n        } else {\n          alert(\"Password changed successfully\");\n        }\n      });\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    id: \"md-form label\",\n    label: \"Enter old password\",\n    id: \"password\",\n    name: \"password\",\n    validate: true,\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Enter new password\",\n    id: \"newPassword\",\n    name: \"newPassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), formik.touched.newPassword && formik.errors.newPassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, formik.errors.newPassword) : null, React.createElement(MDBInput, {\n    label: \"Confirm new password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Go Back\"))))));\n};\n\nexport default ChangepassForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Developer_dash/ChangePass.jsx"],"names":["React","Component","Form","Button","Alert","jwt_decode","axios","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","useFormik","localhost","validate","values","errors","password","newPassword","cpassword","ChangepassForm","formik","initialValues","newpassword","onSubmit","put","localStorage","usertoken","user","_id","then","res","data","alert","handleChange","handleBlur","touched","lastname","link","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport jwt_decode from 'jwt-decode'\nimport axios from 'axios'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { useFormik } from 'formik';\nimport { localhost } from '../GlobalVars'\nimport '../App.css';\n\nconst validate = values => {\n    const errors = {};\n    if (!values.password) {\n        errors.password = \"Required\"\n    }\n\n    if (!values.newPassword) {\n        errors.newPassword = \"Required\"\n    }\n\n    if (!values.cpassword) {\n        errors.cpassword = \"Required\"\n      } else {\n        if (values.cpassword !== values.newPassword) {\n          errors.cpassword = \"password doesn't match\"\n        }\n      }\n    return errors;\n};\n\nconst ChangepassForm = () => {\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            newpassword:'',\n            cpassword:''\n        },\n        validate,\n        onSubmit: async (values) => {\n            axios.put(`${localhost}/user/changepass/${jwt_decode(localStorage.usertoken).user._id}`, {\n                password: values.password,\n                newPassword: values.newPassword\n            })\n                .then(res => {\n                    if (\"1\" == res.data) {\n                        alert(\"Old password is not correct\")\n                    }\n                    else {\n                        alert(\"Password changed successfully\")\n                    }\n                })\n        },\n    });\n    return (\n        <MDBContainer>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <form>\n                    <div className=\"grey-text\">\n            \n                        <MDBInput id=\"md-form label\"\n                            label=\"Enter old password\"\n                            id=\"password\"\n                            name=\"password\"\n                            validate\n                            type=\"password\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.password}\n                        />\n                        {formik.touched.password && formik.errors.password ? (\n                            <div>{formik.errors.password}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Enter new password\"\n                            id=\"newPassword\"\n                            name=\"newPassword\"\n                            type=\"password\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.lastname}\n                        />\n                        {formik.touched.newPassword && formik.errors.newPassword ? (\n                            <div>{formik.errors.newPassword}</div>\n                        ) : null}\n                        <MDBInput\n                            label=\"Confirm new password\"\n                            id=\"cpassword\"\n                            name=\"cpassword\"\n                            type=\"password\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.link}\n                        />\n                        {formik.touched.cpassword && formik.errors.cpassword ? (\n                            <div>{formik.errors.cpassword}</div>\n                        ) : null}\n                        <MDBBtn id=\"btn-primary\" type=\"submit\" color=\"primary\" onClick={formik.handleSubmit}>Submit</MDBBtn>\n                        <MDBBtn id=\"btn-primary\" type=\"submit\" color=\"primary\" >Go Back</MDBBtn>\n                        </div>\n                    </form>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    );\n};\n\n\nexport default ChangepassForm;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}