{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Login.jsx\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Col, Row, Form, Container, Button } from 'react-bootstrap';\nimport { login } from './functionAuth';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: async values => {\n      login(values).then(res => {\n        if (res.data == \"1\") {\n          alert(\"password is incorrect\");\n        } else if (res.data == \"2\") {\n          alert(\"email not found\");\n        } else {\n          localStorage.setItem('usertoken', res.data);\n          alert(\"login successfully\");\n          setShow(!show);\n        }\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Login\")))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Login.jsx"],"names":["React","useState","useFormik","Col","Row","Form","Container","Button","login","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","validate","values","errors","email","test","password","LoginForm","show","setShow","formik","initialValues","onSubmit","then","res","data","alert","localStorage","setItem","catch","err","console","log","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["\nimport React ,{ useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Col, Row, Form, Container, Button } from 'react-bootstrap';\nimport { login } from './functionAuth'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const [show, setShow] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: async (values) => {\n      login(values)\n      .then(res =>{\n        if(res.data==\"1\"){\n          alert(\"password is incorrect\")\n        }else if(res.data==\"2\"){\n          alert(\"email not found\")\n        }else{\n          localStorage.setItem('usertoken' , res.data)\n          alert(\"login successfully\")\n          setShow(!show)\n        } \n        })\n      .catch(err=>console.log(err))\n    },\n  });\n  return (\n    <MDBContainer>\n      {/* {show && <Redirect to={{ pathname: `/Portfolio/${props.username}` ,  state: { data: formik.values }  }} />} */}\n\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>  \n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n            <MDBBtn type=\"submit\" color=\"primary\">Login</MDBBtn>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}