{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth';\nimport Typical from 'react-typical';\nimport \"./Atho.css\";\nimport { Link } from \"react-router-dom\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport { fileUploadHandler, getImagesUrl } from \"../ImageUpload/UploadImage\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstname = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastname = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  }\n\n  return errors;\n};\n\nconst SignupForm = props => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role: 1\n    },\n    validate,\n    onSubmit: async values => {\n      register(values).then(r => {\n        console.log(r); //1 means email is in use\n\n        if (r.data.msg == \"1\") {\n          console.log(\"1\");\n          alert(\"Email is already in use\");\n        } else if (r.data.msg == \"0\") {\n          console.log(\"0\");\n          alert(\"username is already in use\");\n        } else if (r.data.msg == \"3\") {\n          console.log(\"3\");\n          console.log(r.data.user);\n          props.toggleSub(r.data.userid, r.data.username); //redirect to the add portfolio and send the user id with it\n\n          alert(\"User registered!\");\n        }\n      }).catch(err => console.log(err)); // alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Typical, {\n    className: \"deverlperReg\",\n    steps: ['Developer', 1500, 'Developer registering ....', 50000],\n    loop: Infinity,\n    wrapper: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    className: \"divrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"First name\",\n    id: \"firstname\",\n    name: \"firstname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), formik.touched.firstname && formik.errors.firstname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, formik.errors.firstname) : null, React.createElement(MDBInput, {\n    label: \"Last name\",\n    id: \"lastname\",\n    name: \"lastname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), formik.touched.lastname && formik.errors.lastname ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, formik.errors.lastname) : null, React.createElement(MDBInput, {\n    label: \"Username\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(MDBInput, {\n    label: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(MDBInput, {\n    label: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Confirm password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.cpassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Register\"))))));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/frontend-1/src/Atho/Signup_dev.jsx"],"names":["React","useFormik","register","Typical","Link","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","fileUploadHandler","getImagesUrl","validate","values","errors","firstname","length","lastname","email","test","password","cpassword","username","SignupForm","props","formik","initialValues","role","onSubmit","then","r","console","log","data","msg","alert","user","toggleSub","userid","catch","err","Infinity","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { register } from './functionAuth'\nimport Typical from 'react-typical'\nimport \"./Atho.css\"\nimport {Link} from \"react-router-dom\"\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\nimport {fileUploadHandler,getImagesUrl} from \"../ImageUpload/UploadImage\"\n\nconst validate = values => {\n  const errors = {};\n  if (!values.firstname) {\n    errors.firstname = 'Required';\n  } else if (values.firstname.length > 15) {\n    errors.firstname = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Required';\n  } else if (values.lastname.length > 20) {\n    errors.lastname = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\"\n  } else {\n    if (values.cpassword !== values.password) {\n      errors.cpassword = \"password doesn't match\"\n    }\n  }\n\n  if (!values.username) {\n    errors.username = \"Required\"\n  }\n\n  return errors;\n};\n\n\n\nconst SignupForm = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      cpassword: '',\n      username: '',\n      role:1\n    },\n    validate,\n\n   \n    onSubmit: async (values) => {\n     \n      register(values)\n        .then(r => {\n          console.log(r)\n          //1 means email is in use\n          if(r.data.msg==\"1\"){\n            console.log(\"1\")\n            alert(\"Email is already in use\")\n          }else if(r.data.msg==\"0\"){\n            console.log(\"0\")\n            alert(\"username is already in use\")\n          }else if(r.data.msg==\"3\"){\n            console.log(\"3\")\n            console.log(r.data.user)\n            props.toggleSub(r.data.userid,r.data.username)\n            //redirect to the add portfolio and send the user id with it\n            alert(\"User registered!\")\n          }\n        }\n        )\n        .catch(err => console.log(err))\n      // alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <div>\n\n\n\n\n    <MDBContainer className=\"register\">\n\n    <Typical className=\"deverlperReg\"\n        steps={['Developer', 1500, 'Developer registering ....', 50000]}\n        loop={Infinity}\n        wrapper=\"p\"\n      />\n   \n      <MDBRow className=\"divrow\">\n        <MDBCol md=\"6\">\n          <form onSubmit={formik.handleSubmit}>\n            <MDBInput\n              label=\"First name\"\n              id=\"firstname\"\n              name=\"firstname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.firstname}\n            />\n            {formik.touched.firstname && formik.errors.firstname ? (\n              <div>{formik.errors.firstname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Last name\"\n              id=\"lastname\"\n              name=\"lastname\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.lastname}\n            />\n            {formik.touched.lastname && formik.errors.lastname ? (\n              <div>{formik.errors.lastname}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Username\"\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n            {formik.touched.username && formik.errors.username ? (\n              <div>{formik.errors.username}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Email\"\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <MDBInput\n              label=\"Password\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div>{formik.errors.password}</div>\n            ) : null}\n\n            <MDBInput\n              label=\"Confirm password\"\n              id=\"cpassword\"\n              name=\"cpassword\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.cpassword}\n            />\n            {formik.touched.cpassword && formik.errors.cpassword ? (\n              <div>{formik.errors.cpassword}</div>\n            ) : null}\n\n\n            <MDBBtn type=\"submit\" color=\"primary\">Register</MDBBtn>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    </div>\n  );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}