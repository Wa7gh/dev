{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/Node-backend/frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/Node-backend/frontend-1/src/Developer_dash/ChangePass.jsx\";\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport { useFormik } from \"formik\";\nimport { localhost } from \"../GlobalVars\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.newPassword) {\n    errors.newPassword = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.newPassword) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n\n  return errors;\n};\n\nconst ChangepassForm = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const formik = useFormik({\n    initialValues: {\n      password: \"\",\n      newpassword: \"\",\n      cpassword: \"\"\n    },\n    validate,\n    onSubmit: async values => {\n      axios.put(`${localhost}/user/changepass/${jwt_decode(localStorage.usertoken).user._id}`, {\n        password: values.password,\n        newPassword: values.newPassword\n      }).then(res => {\n        if (\"1\" === res.data) {\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"Old password is not correct\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } else {\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"success\",\n            title: \"Password changed successfully\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n          setShow(!show);\n        }\n      });\n    }\n  });\n  return React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, show && React.createElement(Redirect, {\n    to: {\n      pathname: `/dashboard`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grey-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    id: \"md-form label\",\n    label: \"Enter old password\",\n    id: \"password\",\n    name: \"password\",\n    validate: true,\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(MDBInput, {\n    label: \"Enter new password\",\n    id: \"newPassword\",\n    name: \"newPassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), formik.touched.newPassword && formik.errors.newPassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, formik.errors.newPassword) : null, React.createElement(MDBInput, {\n    label: \"Confirm new password\",\n    id: \"cpassword\",\n    name: \"cpassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), formik.touched.cpassword && formik.errors.cpassword ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, formik.errors.cpassword) : null, React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Submit\"))))));\n};\n\nexport default ChangepassForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/Node-backend/frontend-1/src/Developer_dash/ChangePass.jsx"],"names":["React","useState","jwt_decode","axios","Swal","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","useFormik","localhost","Redirect","validate","values","errors","password","newPassword","cpassword","ChangepassForm","show","setShow","formik","initialValues","newpassword","onSubmit","put","localStorage","usertoken","user","_id","then","res","data","fire","position","icon","title","showConfirmButton","timer","pathname","handleChange","handleBlur","touched","lastname","link","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport { useFormik } from \"formik\";\nimport { localhost } from \"../GlobalVars\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst validate = values => {\n  const errors = {};\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  if (!values.newPassword) {\n    errors.newPassword = \"Required\";\n  }\n\n  if (!values.cpassword) {\n    errors.cpassword = \"Required\";\n  } else {\n    if (values.cpassword !== values.newPassword) {\n      errors.cpassword = \"password doesn't match\";\n    }\n  }\n  return errors;\n};\n\nconst ChangepassForm = () => {\n  const [show, setShow] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      password: \"\",\n      newpassword: \"\",\n      cpassword: \"\"\n    },\n    validate,\n    onSubmit: async values => {\n      axios\n        .put(\n          `${localhost}/user/changepass/${\n            jwt_decode(localStorage.usertoken).user._id\n          }`,\n          {\n            password: values.password,\n            newPassword: values.newPassword\n          }\n        )\n        .then(res => {\n          if (\"1\" === res.data) {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"error\",\n              title: \"Old password is not correct\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          } else {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"success\",\n              title: \"Password changed successfully\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            setShow(!show);\n          }\n        });\n    }\n  });\n  return (\n    <MDBContainer>\n      {show && <Redirect to={{ pathname: `/dashboard` }} />}\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <form>\n            <div className=\"grey-text\">\n              <MDBInput\n                id=\"md-form label\"\n                label=\"Enter old password\"\n                id=\"password\"\n                name=\"password\"\n                validate\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n              />\n              {formik.touched.password && formik.errors.password ? (\n                <div>{formik.errors.password}</div>\n              ) : null}\n              <MDBInput\n                label=\"Enter new password\"\n                id=\"newPassword\"\n                name=\"newPassword\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.lastname}\n              />\n              {formik.touched.newPassword && formik.errors.newPassword ? (\n                <div>{formik.errors.newPassword}</div>\n              ) : null}\n              <MDBInput\n                label=\"Confirm new password\"\n                id=\"cpassword\"\n                name=\"cpassword\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.link}\n              />\n              {formik.touched.cpassword && formik.errors.cpassword ? (\n                <div>{formik.errors.cpassword}</div>\n              ) : null}\n              <MDBBtn\n                id=\"btn-primary\"\n                type=\"submit\"\n                color=\"primary\"\n                onClick={formik.handleSubmit}\n              >\n                Submit\n              </MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default ChangepassForm;\n"]},"metadata":{},"sourceType":"module"}