{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Node-backend/frontend-1/src/Employeer_dash/jobs/AddJob.jsx\";\nimport React from \"react\";\nimport { localhost } from \"../../GlobalVars\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"Required\";\n  }\n\n  if (!values.description) {\n    errors.description = \"Required\";\n  }\n\n  if (!values.budget) {\n    errors.budget = \"Required\";\n  }\n\n  if (!values.deadline) {\n    errors.deadline = \"Required\";\n  }\n\n  return errors;\n};\n\nconst AddJobForm = () => {\n  const checkboxclick = e => {\n    let temp = formik.values.technologies.slice();\n    let fIndex = temp.indexOf(e.target.id);\n\n    if (fIndex < 0) {\n      temp.push(e.target.id);\n    } else {\n      temp.splice(fIndex, 1);\n    }\n\n    formik.values.technologies = temp;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      budget: \"\",\n      technologies: [],\n      deadline: \"\",\n      requests: [],\n      emp_id: jwt_decode(localStorage.usertoken).user._id\n    },\n    validate,\n    onSubmit: async values => {\n      axios.post(`${localhost}/job/create`, values).then(result => {\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"success\",\n          title: \"Add Job successfully\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        window.location.reload();\n      }).catch(err => console.log(err));\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(MDBCol, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: \"Title\",\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), formik.touched.title && formik.errors.title ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, formik.errors.title, \" \") : null, React.createElement(MDBInput, {\n    label: \"Description\",\n    id: \"description\",\n    name: \"description\",\n    type: \"textarea\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), formik.touched.description && formik.errors.description ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, formik.errors.description, \" \") : null, React.createElement(MDBInput, {\n    label: \"Budget\",\n    id: \"budget\",\n    name: \"budget\",\n    type: \"number\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.budget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), formik.touched.budget && formik.errors.budget ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, formik.errors.budget) : null, React.createElement(MDBInput, {\n    label: \"deadline\",\n    id: \"deadline\",\n    name: \"deadline\",\n    type: \"Date\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.deadline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), formik.touched.deadline && formik.errors.deadline ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, formik.errors.deadline, \" \") : null, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    label: \"Ruby\",\n    type: \"checkbox\",\n    id: \"Ruby\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    label: \"javascript\",\n    type: \"checkbox\",\n    id: \"javascript\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    label: \"Java\",\n    type: \"checkbox\",\n    id: \"Java\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    label: \"C++\",\n    type: \"checkbox\",\n    id: \"C++\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    label: \"SQL\",\n    type: \"checkbox\",\n    id: \"SQL\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    label: \"C#\",\n    type: \"checkbox\",\n    id: \"C#\",\n    onChange: checkboxclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(MDBBtn, {\n    id: \"btn-primary\",\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Add\"))))));\n};\n\nexport default AddJobForm;","map":{"version":3,"sources":["/Users/macbook/Desktop/Node-backend/frontend-1/src/Employeer_dash/jobs/AddJob.jsx"],"names":["React","localhost","useFormik","axios","jwt_decode","Swal","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","Form","Row","Col","validate","values","errors","title","description","budget","deadline","AddJobForm","checkboxclick","e","temp","formik","technologies","slice","fIndex","indexOf","target","id","push","splice","initialValues","requests","emp_id","localStorage","usertoken","user","_id","onSubmit","post","then","result","fire","position","icon","showConfirmButton","timer","window","location","reload","catch","err","console","log","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { localhost } from \"../../GlobalVars\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from \"mdbreact\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"Required\";\n  }\n  if (!values.description) {\n    errors.description = \"Required\";\n  }\n  if (!values.budget) {\n    errors.budget = \"Required\";\n  }\n  if (!values.deadline) {\n    errors.deadline = \"Required\";\n  }\n  return errors;\n};\nconst AddJobForm = () => {\n  const checkboxclick = e => {\n    let temp = formik.values.technologies.slice();\n    let fIndex = temp.indexOf(e.target.id);\n    if (fIndex < 0) {\n      temp.push(e.target.id);\n    } else {\n      temp.splice(fIndex, 1);\n    }\n    formik.values.technologies = temp;\n  };\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      budget: \"\",\n      technologies: [],\n      deadline: \"\",\n      requests: [],\n      emp_id: jwt_decode(localStorage.usertoken).user._id\n    },\n    validate,\n    onSubmit: async values => {\n      axios\n        .post(`${localhost}/job/create`, values)\n        .then(result => {\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"success\",\n            title: \"Add Job successfully\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n          window.location.reload();\n        })\n        .catch(err => console.log(err));\n    }\n  });\n  return (\n    <div>\n      <br />\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={formik.handleSubmit}>\n              <MDBInput\n                label=\"Title\"\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.title}\n              />\n              {formik.touched.title && formik.errors.title ? (\n                <div>{formik.errors.title} </div>\n              ) : null}\n              <MDBInput\n                label=\"Description\"\n                id=\"description\"\n                name=\"description\"\n                type=\"textarea\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.description}\n              />\n              {formik.touched.description && formik.errors.description ? (\n                <div>{formik.errors.description} </div>\n              ) : null}\n              <MDBInput\n                label=\"Budget\"\n                id=\"budget\"\n                name=\"budget\"\n                type=\"number\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.budget}\n              />\n              {formik.touched.budget && formik.errors.budget ? (\n                <div>{formik.errors.budget}</div>\n              ) : null}\n              <MDBInput\n                label=\"deadline\"\n                id=\"deadline\"\n                name=\"deadline\"\n                type=\"Date\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.deadline}\n              />\n              {formik.touched.deadline && formik.errors.deadline ? (\n                <div>{formik.errors.deadline} </div>\n              ) : null}\n              <Row>\n                <Col>\n                  <Form.Check\n                    label=\"Ruby\"\n                    type=\"checkbox\"\n                    id=\"Ruby\"\n                    onChange={checkboxclick}\n                  />\n                  <Form.Check\n                    label=\"javascript\"\n                    type=\"checkbox\"\n                    id=\"javascript\"\n                    onChange={checkboxclick}\n                  />\n                </Col>\n                <Col>\n                  <Form.Check\n                    label=\"Java\"\n                    type=\"checkbox\"\n                    id=\"Java\"\n                    onChange={checkboxclick}\n                  />\n                  <Form.Check\n                    label=\"C++\"\n                    type=\"checkbox\"\n                    id=\"C++\"\n                    onChange={checkboxclick}\n                  />\n                </Col>\n                <Col>\n                  <Form.Check\n                    label=\"SQL\"\n                    type=\"checkbox\"\n                    id=\"SQL\"\n                    onChange={checkboxclick}\n                  />\n                  <Form.Check\n                    label=\"C#\"\n                    type=\"checkbox\"\n                    id=\"C#\"\n                    onChange={checkboxclick}\n                  />\n                </Col>\n              </Row>\n\n              <br />\n              <MDBBtn id=\"btn-primary\" type=\"submit\" color=\"primary\">\n                Add\n              </MDBBtn>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </div>\n  );\n};\n\nexport default AddJobForm;\n"]},"metadata":{},"sourceType":"module"}